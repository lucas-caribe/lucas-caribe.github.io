{"version":3,"sources":["context/PokemonContext.js","components/utils/createPokemonObject.js","services/pokemonApi.js","typeColors.js","context/PokemonProvider.js","components/TypeIcon/index.js","components/Pokemon/index.js","components/LoadingScreen/index.js","components/Pokedex/index.js","components/Button/index.js","components/PokemonFilters/index.js","components/Header/index.js","components/Footer/index.js","App.js","index.js"],"names":["PokemonContext","createContext","createPokemonObject","pokemonData","id","name","height","weight","sprites","types","stats","typeNames","map","type","averageWeight","value","measurementUnit","averageHeight","sprite","other","front_default","hp","base_stat","attack","defense","specialAttack","specialDefense","speed","BASE_URL","FIRST_PAGE","createPokemonList","results","a","pokemon","i","length","url","fetch","pokemonResponse","json","push","fetchPokemon","page","response","next","console","log","typeColors","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","PokemonProvider","children","useState","pokemonList","setPokemonList","filteredPokemon","setFilteredPokemon","activeFilter","setActiveFilter","isFetching","setIsFetching","loadingMore","setLoadingMore","nextPage","setNextPage","pokemonTypes","Object","keys","useEffect","fetchPokemonData","filter","includes","loadMorePokemon","Provider","setFilter","TypeIcon","typeIconStyle","background","className","style","src","alt","Pokemon","typeColor","cardStyle","cardBodyStyle","key","join","LoadingScreen","width","Pokedex","useContext","window","onscroll","document","documentElement","scrollHeight","scrollTop","clientHeight","Button","isActive","buttonStyle","outline","onClick","PokemonFilters","index","Header","Footer","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7e48fd85.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst PokemonContext = createContext();\n\nexport default PokemonContext;\n","const createPokemonObject = (pokemonData) => {\n  const { id, name, height, weight, sprites, types, stats } = pokemonData;\n  const typeNames = types.map((type) => type.type.name);\n\n  return {\n    id,\n    name,\n    averageWeight: {\n      value: weight / 10,\n      measurementUnit: 'kg',\n    },\n    averageHeight: {\n      value: height / 10,\n      measurementUnit: 'm',\n    },\n    sprite: sprites.other['official-artwork'].front_default,\n    types: typeNames,\n    hp: stats[0].base_stat,\n    attack: stats[1].base_stat,\n    defense: stats[2].base_stat,\n    specialAttack: stats[3].base_stat,\n    specialDefense: stats[4].base_stat,\n    speed: stats[5].base_stat,\n  };\n};\n\nexport default createPokemonObject;\n","// offset - https://pokeapi.co/api/v2/pokemon/?offset=0&limit=20\n// by type - https://pokeapi.co/api/v2/type/{name or id}/\n\nimport createPokemonObject from '../components/utils/createPokemonObject';\n\nconst BASE_URL = 'https://pokeapi.co/api/v2';\nconst POKEMON_LIMIT = 50;\nconst FIRST_PAGE = `${BASE_URL}/pokemon/?offset=0&limit=${POKEMON_LIMIT}`;\n\nconst createPokemonList = async (results) => {\n  const pokemon = [];\n\n  for (let i = 0; i < results.length; i++) {\n    const url = results[i].pokemon ? results[i].pokemon.url : results[i].url;\n    const pokemonResponse = await fetch(url);\n    const pokemonData = await pokemonResponse.json();\n\n    pokemon.push(createPokemonObject(pokemonData));\n  }\n\n  return pokemon;\n};\n\nexport const fetchPokemon = async (page = FIRST_PAGE) => {\n  try {\n    const response = await fetch(page);\n    const { results, next } = await response.json();\n\n    return [await createPokemonList(results), next];\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n};\n\nexport const fetchPokemonByType = async (type) => {\n  try {\n    const response = await fetch(`${BASE_URL}/type/${type}`);\n    const { pokemon: results } = await response.json();\n\n    return await createPokemonList(results);\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n};\n","const typeColors = {\n  bug: '#729f3f',\n  dark: '#707070',\n  dragon: ['#53a4cf', '#f16e57'],\n  electric: '#eed535',\n  fairy: '#fdb9e9',\n  fighting: '#d56723',\n  fire: '#fd7d24',\n  flying: ['#3dc7ef', '#bdb9b8'],\n  ghost: '#7b62a3',\n  grass: '#9bcc50',\n  ground: ['#f7de3f', '#ab9842'],\n  ice: '#51c4e7',\n  normal: '#a4acaf',\n  poison: '#b97fc9',\n  psychic: '#f366b9',\n  rock: '#a38c21',\n  steel: '#9eb7b8',\n  water: '#4592c4',\n};\n\nexport default typeColors;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport PokemonContext from './PokemonContext';\n\nimport { fetchPokemon } from '../services/pokemonApi';\n\nimport typeColors from '../typeColors';\n\nconst PokemonProvider = ({ children }) => {\n  const [pokemonList, setPokemonList] = useState([]);\n  const [filteredPokemon, setFilteredPokemon] = useState([]);\n  const [activeFilter, setActiveFilter] = useState('');\n  const [isFetching, setIsFetching] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [nextPage, setNextPage] = useState('');\n  // const [searchTerm, setSearchTerm] = useState('');\n\n  const pokemonTypes = Object.keys(typeColors);\n\n  useEffect(() => {\n    const fetchPokemonData = async () => {\n      setIsFetching(true);\n      const [pokemonData, next] = await fetchPokemon();\n      setPokemonList(pokemonData);\n      setNextPage(next);\n      setIsFetching(false);\n    };\n\n    fetchPokemonData();\n  }, []);\n\n  useEffect(() => {\n    const filterPokemon = () => {\n      setFilteredPokemon(\n        pokemonList.filter(\n          ({ types }) => types.includes(activeFilter) || !activeFilter,\n        ),\n      );\n    };\n\n    filterPokemon();\n  }, [activeFilter, pokemonList]);\n\n  const setFilter = (filter) => setActiveFilter(filter);\n\n  const loadMorePokemon = async () => {\n    setLoadingMore(true);\n    const [pokemonData, next] = await fetchPokemon(nextPage);\n    setPokemonList([...pokemonList, ...pokemonData]);\n    setNextPage(next);\n    setLoadingMore(false);\n  };\n\n  return (\n    <PokemonContext.Provider\n      value={{\n        pokemonList,\n        filteredPokemon,\n        activeFilter,\n        pokemonTypes,\n        isFetching,\n        loadingMore,\n        setFilter,\n        loadMorePokemon,\n      }}\n    >\n      {children}\n    </PokemonContext.Provider>\n  );\n};\n\nPokemonProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default PokemonProvider;\n","import React from 'react';\n\nimport typeColors from '../../typeColors';\n\nimport './style.css';\n\nfunction TypeIcon({ type }) {\n  const typeColor =\n    typeof typeColors[type] === 'object'\n      ? typeColors[type][0]\n      : typeColors[type];\n\n  const typeIconStyle = {\n    background: typeColor,\n  };\n\n  return (\n    <div className=\"type-icon\" style={typeIconStyle}>\n      <img src={`/pokedex/assets/type-icons/${type}.svg`} alt={type} />\n    </div>\n  );\n}\n\nexport default TypeIcon;\n","import React from 'react';\n\nimport TypeIcon from '../TypeIcon';\n\nimport typeColors from '../../typeColors';\n\nimport './style.css';\n\n// attack,\n// defense,\n// specialAttack,\n// specialDefense,\n// speed,\n\nfunction Pokemon({ pokemon }) {\n  const { name, types, averageWeight, averageHeight, sprite, hp } = pokemon;\n\n  const typeColor = typeColors[types[0]];\n\n  const cardStyle = {\n    background:\n      typeof typeColor === 'object'\n        ? `linear-gradient(to bottom, ${typeColor[0]}, ${typeColor[0]} 50%, ${typeColor[1]} 50%)`\n        : typeColor,\n  };\n\n  const cardBodyStyle = {\n    background: `no-repeat #fff linear-gradient(to bottom, ${\n      typeof typeColor === 'object' ? typeColor[0] : typeColor\n    } 5%, #FFFFFF) top`,\n  };\n\n  return (\n    <div className=\"card\" style={cardStyle}>\n      <div className=\"card-body\" style={cardBodyStyle}>\n        <div className=\"card-header\">\n          <p className=\"poke-name\">{name}</p>\n          <p className=\"poke-hp\">\n            HP <span>{hp}</span>\n          </p>\n          <div className=\"types\">\n            {types.map((type) => (\n              <TypeIcon key={type} type={type} />\n            ))}\n          </div>\n        </div>\n\n        <div className=\"card-main-info\">\n          <img className=\"poke-image\" src={sprite} alt={name} />\n          <p className=\"poke-types\">\n            {types.length === 1\n              ? `Type: ${types[0]}`\n              : `Types: ${types.join(' | ')}`}\n          </p>\n          <p>\n            Average Height: {averageHeight.value}{' '}\n            {averageHeight.measurementUnit} | Average Weight:{' '}\n            {averageWeight.value} {averageWeight.measurementUnit}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pokemon;\n","import React from 'react';\n\nimport './style.css';\n\nfunction LoadingScreen() {\n  return (\n    <div className=\"loading-container\">\n      <img src=\"/pokedex/assets/loading.gif\" alt=\"Pikachu\" style={{ width: '20em' }} />\n      <p>\n        Loading\n        <span>.</span>\n        <span>.</span>\n        <span>.</span>\n      </p>\n    </div>\n  );\n}\n\nexport default LoadingScreen;\n","import React, { useContext } from 'react';\n\nimport Pokemon from '../Pokemon';\nimport LoadingScreen from '../LoadingScreen';\n\nimport PokemonContext from '../../context/PokemonContext';\n\nimport './style.css';\n\nfunction Pokedex() {\n  const { isFetching, filteredPokemon, loadMorePokemon, loadingMore } =\n    useContext(PokemonContext);\n\n  window.onscroll = () => {\n    const { scrollHeight, scrollTop, clientHeight } = document.documentElement;\n\n    if (scrollHeight - scrollTop === clientHeight) {\n      loadMorePokemon();\n    }\n  };\n\n  if (isFetching) {\n    return (\n      <div className=\"main-content\">\n        <LoadingScreen />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"main-content\">\n      <div className=\"pokedex\">\n        {filteredPokemon.length > 0 &&\n          filteredPokemon.map((pokemon) => (\n            <Pokemon key={pokemon.id} pokemon={pokemon} />\n          ))}\n      </div>\n      {loadingMore && (\n        <div className=\"loading-more\">\n          <img src=\"/pokedex/assets/loading.gif\" alt=\"loading...\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Pokedex;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport PokemonContext from '../../context/PokemonContext';\n\nimport typeColors from '../../typeColors';\n\nimport './style.css';\n\nfunction Button({ children }) {\n  const { setFilter, activeFilter } = useContext(PokemonContext);\n  \n  const isActive = activeFilter === children;\n  const typeColor = typeColors[children];\n\n  const buttonStyle = {\n    background:\n      typeof typeColor === 'object'\n        ? `linear-gradient(to bottom, ${typeColor[0]}, ${typeColor[0]} 50%, ${typeColor[1]} 50%)`\n        : typeColor,\n    outline: isActive ? '2px solid rgb(164, 164, 164)' : 'none',\n  };\n\n  return (\n    <button\n      className=\"type-button\"\n      onClick={() => isActive ? setFilter('') : setFilter(children)}\n      style={buttonStyle}\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Button;\n","import React, { useContext } from 'react';\n\nimport PokemonContext from '../../context/PokemonContext';\n\nimport Button from '../Button/';\n\nimport './style.css';\n\nfunction PokemonFilters() {\n  const { pokemonTypes } = useContext(PokemonContext);\n\n  return (\n    <div className=\"type-filters\">\n      <div className=\"buttons\">\n        {pokemonTypes.map((type, index) => (\n          <Button key={index}>{type}</Button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default PokemonFilters;\n","import React from 'react';\n\nimport PokemonFilters from '../PokemonFilters';\n\nimport './styles.css';\n\nfunction Header() {\n  return (\n    <header>\n      <img src=\"/pokedex/assets/pokemon-logo.png\" alt=\"Pokemon Logo\" />\n      <PokemonFilters />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nimport './style.css';\n\nfunction Footer() {\n  return <footer>© 2021 - Lucas Caribé</footer>;\n}\n\nexport default Footer;\n","import React, { useContext } from 'react';\n\nimport PokemonContext from './context/PokemonContext';\n\nimport Pokedex from './components/Pokedex/';\nimport Header from './components/Header/';\nimport Footer from './components/Footer/';\n\nimport './App.css';\n\nfunction App() {\n  const { isFetching } = useContext(PokemonContext);\n\n  return (\n    <div className=\"App\">\n      {!isFetching && <Header />}\n      <Pokedex />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport PokemonProvider from './context/PokemonProvider';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <PokemonProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </PokemonProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}