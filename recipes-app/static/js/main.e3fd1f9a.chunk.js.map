{"version":3,"sources":["services/recipesAPI.js","components/Button/index.js","redux/actions/mealsActions.js","components/Header/index.js","redux/actions/drinksActions.js","components/Footer/index.js","components/Loading/index.js","components/ShareButton/index.js","components/RecipeCard/index.js","components/Input/index.js","components/IngredientCard/index.js","images/logo.png","images/icons/email.svg","images/icons/password.svg","images/icons/shareIcon.svg","images/icons/blackHeartIcon.svg","images/icons/whiteHeartIcon.svg","images/icons/backIcon.svg","components/SearchBar/index.js","images/icons/searchIcon.svg","images/icons/profileIcon.svg","images/icons/drinkIcon.svg","images/icons/exploreIcon.svg","images/icons/mealIcon.svg","pages/MealIngredients/index.js","pages/MealAreas/index.js","pages/ExploreMeals/index.js","pages/DrinkIngredients/index.js","pages/ExploreDrinks/index.js","pages/Login/index.js","redux/actions/favoriteRecipesActions.js","components/FavoriteButton/index.js","components/IngredientCheckbox/index.js","components/BackButton/index.js","redux/actions/inProgressRecipesActions.js","redux/actions/doneRecipesActions.js","utils/getIngredients.js","pages/MealProgress/index.js","pages/MealDetails/index.js","components/CategoryButton/index.js","components/CategoryFilters/index.js","pages/Meals/index.js","pages/DrinkDetails/index.js","pages/DrinkProgress/index.js","pages/Drinks/index.js","pages/Explore/index.js","pages/Profile/index.js","components/DoneRecipeCard/index.js","pages/FinishedRecipes/index.js","components/FavoriteRecipeCard/index.js","pages/FavoriteRecipes/index.js","pages/NotFound/index.js","App.js","serviceWorker.js","redux/reducers/favoriteRecipesReducer.js","redux/reducers/inProgressRecipesReducer.js","redux/reducers/doneRecipesReducer.js","redux/reducers/drinksReducer.js","redux/reducers/mealsReducer.js","redux/reducers/index.js","redux/store/store.js","utils/localStorageRedux.js","index.js"],"names":["MEALS_BASE_URL","DRINKS_BASE_URL","ERROR_MESSAGE","getToken","key","token","localStorage","getItem","JSON","parse","getTypeInfo","type","getRecipes","a","typeToken","typeUrl","fetch","response","json","data","Error","slice","getRecipeById","id","getRecipesByIngredient","ingredient","getRecipesByName","name","getRecipesByFirstLetter","firstLetter","getRecipesByCategory","category","getRandomRecipe","url","getRecipeCategories","getIngredients","getMealAreas","meals","getMealsByArea","area","Button","text","disabled","className","onClick","testId","data-testid","defaultProps","RECIPES_NOT_FOUND","MEALS_ACTIONS","SET_MEALS","SET_FILTERED_MEALS","SET_MEAL_CATEGORIES","SET_FAVORITE","REQUEST_MEALS_API","FAILED_MEALS_REQUEST","setMeals","payload","setFilteredMeals","filterInfo","term","setCategories","categories","requestApi","failedRequest","error","fetchMealsThunk","dispatch","getState","filteredMeals","length","message","setMealsByIngredient","search","global","alert","setMealsByName","setMealsByFirstLetter","setMealsByCategory","setMealsByArea","setMealCategories","retrievedCategories","Header","title","hasSearchBar","useState","showInputSearch","setShowInputSearch","to","src","userIcon","alt","searchIcon","DRINKS_ACTIONS","SET_DRINKS","SET_FILTERED_DRINKS","SET_DRINK_CATEGORIES","REQUEST_DRINKS_API","FAILED_DRINKS_REQUEST","setDrinks","drinks","setFilteredDrinks","fetchDrinksThunk","filteredDrinks","setDrinksByIngredient","setDrinksByName","setDrinksByFirstLetter","setDrinksByCategory","setDrinkCategories","Footer","drinkIcon","exploreIcon","mealIcon","Loading","ShareButton","copiedLink","setCopiedLink","link","location","origin","copy","setTimeout","shareIcon","RecipeCard","thumb","index","history","useHistory","pathname","useLocation","push","Input","icon","placeholder","value","onChange","htmlFor","spellCheck","undefined","IngredientCard","URL","ingredientName","useDispatch","strIngredient","strIngredient1","PropTypes","shape","isRequired","module","exports","typeTable","SearchBar","searchInput","setSearchInput","selectedFilter","setSelectedFilter","thunkTable","ingredients","filterTable","recipeType","handleChange","target","handleClick","checked","MealIngredients","setIngredients","isFetching","setFetching","useEffect","ingredientsList","fetchIngredients","map","MealAreas","areas","setAreas","selectedArea","setSelectedArea","useSelector","areaList","strArea","fetchAreas","idMeal","strMealThumb","strMeal","ExploreMeals","DrinkIngredients","ExploreDrinks","idDrink","Login","email","setEmail","password","setPassword","logo","onSubmit","event","preventDefault","setItem","stringify","cocktails","emailIcon","e","passwordIcon","test","FAVORITE_RECIPES_ACTIONS","ADD_FAVORITE_RECIPE","REMOVE_FAVORITE_RECIPE","toggleFavoriteRecipe","recipe","isFavorite","recipeId","addFavoriteRecipe","FavoriteButton","favoriteRecipes","state","setFavorite","some","favoriteShape","toLowerCase","strCategory","alcoholicOrNot","strAlcoholic","image","filledHeart","outlineHeart","IngredientCheckbox","isChecked","BackButton","mealList","drinkList","path","match","goBack","backIcon","IN_PROGRESS_RECIPES_ACTIONS","SET_IN_PROGRESS_MEAL","REMOVE_IN_PROGRESS_MEAL","SET_IN_PROGRESS_COCKTAIL","REMOVE_IN_PROGRESS_COCKTAIL","setInProgressMeal","ingredientsProgress","setInProgressCocktail","addRecipeIngredient","inProgressRecipes","currentMealProgress","updatedProgress","removeRecipeIngredient","filter","currentIngredient","DONE_RECIPES_ACTIONS","ADD_DONE_RECIPE","setDoneRecipe","doneRecipe","doneDate","Intl","DateTimeFormat","format","Date","now","tags","strTags","split","removeInProgressCocktail","addDoneRecipe","i","currentMeasure","measure","MealProgress","meal","setMeal","useParams","progressInfo","promiseMeals","fetchedMeal","getMeal","ingredientKey","includes","strInstructions","MealDetails","isDone","doneRecipes","isInProgress","getDrinks","strYoutube","replace","drink","strDrink","strDrinkThumb","CategoryButton","handleFilterClick","activeFilter","CategoryFilters","filterType","Meals","DrinkDetails","setDrink","getDrink","getMeals","DrinkProgress","Drinks","Explore","Profile","storageEmail","clear","DoneRecipeCard","style","width","tag","All","Food","FinishedRecipes","filteredRecipes","setFilteredRecipes","setFilter","FavoriteRecipeCard","FavoriteRecipes","NotFound","App","exact","component","render","props","Boolean","window","hostname","INITIAL_STATE","favoriteRecipesReducer","action","inProgressRecipesReducer","doneRecipesReducer","drinksReducer","mealsReducer","rootReducer","combineReducers","initialStoreState","getFavoriteRecipes","getInProgressRecipes","getDoneRecipes","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3fd1f9a.chunk.js","sourcesContent":["const MEALS_BASE_URL = 'https://www.themealdb.com/api/json/v1';\nconst DRINKS_BASE_URL = 'https://www.thecocktaildb.com/api/json/v1';\nconst ERROR_MESSAGE = 'Não foram encontradas receitas!';\n\nconst MAX_RECIPES = 12;\nconst MAX_INGREDIENTS = 12;\nconst MAX_CATEGORIES = 5;\n\nconst getToken = (key) => {\n  const token = localStorage.getItem(key);\n  const parsedToken = token ? JSON.parse(token) : '1';\n\n  return parsedToken;\n};\n\nconst getTypeInfo = (type) => {\n  if (type === 'meals') {\n    return [getToken('mealsToken'), MEALS_BASE_URL];\n  }\n  return [getToken('cocktailsToken'), DRINKS_BASE_URL];\n};\n\nexport const getRecipes = async (type) => {\n  const [typeToken, typeUrl] = getTypeInfo(type);\n\n  const response = await fetch(`${typeUrl}/${typeToken}/search.php?s=`);\n  const data = await response.json();\n\n  if (!data[type]) throw new Error(ERROR_MESSAGE);\n\n  return data[type].slice(0, MAX_RECIPES);\n};\n\nexport const getRecipeById = async (type, id) => {\n  const [typeToken, typeUrl] = getTypeInfo(type);\n\n  const response = await fetch(`${typeUrl}/${typeToken}/lookup.php?i=${id}`);\n  const data = await response.json();\n\n  if (!data[type]) throw new Error(ERROR_MESSAGE);\n\n  return data[type][0];\n};\n\nexport const getRecipesByIngredient = async (type, ingredient) => {\n  const [typeToken, typeUrl] = getTypeInfo(type);\n\n  const response = await fetch(\n    `${typeUrl}/${typeToken}/filter.php?i=${ingredient}`,\n  );\n  const data = await response.json();\n\n  if (!data[type]) throw new Error(ERROR_MESSAGE);\n\n  return data[type].slice(0, MAX_RECIPES);\n};\n\nexport const getRecipesByName = async (type, name) => {\n  const [typeToken, typeUrl] = getTypeInfo(type);\n\n  const response = await fetch(`${typeUrl}/${typeToken}/search.php?s=${name}`);\n  const data = await response.json();\n\n  if (!data[type]) throw new Error(ERROR_MESSAGE);\n\n  return data[type].slice(0, MAX_RECIPES);\n};\n\nexport const getRecipesByFirstLetter = async (type, firstLetter) => {\n  const [typeToken, typeUrl] = getTypeInfo(type);\n\n  const response = await fetch(\n    `${typeUrl}/${typeToken}/search.php?f=${firstLetter}`,\n  );\n  const data = await response.json();\n\n  if (!data[type]) throw new Error(ERROR_MESSAGE);\n\n  return data[type].slice(0, MAX_RECIPES);\n};\n\nexport const getRecipesByCategory = async (type, category) => {\n  const [typeToken, typeUrl] = getTypeInfo(type);\n\n  const response = await fetch(\n    `${typeUrl}/${typeToken}/filter.php?c=${category}`,\n  );\n  const data = await response.json();\n\n  if (!data[type]) throw new Error(ERROR_MESSAGE);\n\n  return data[type].slice(0, MAX_RECIPES);\n};\n\nexport const getRandomRecipe = async (type) => {\n  let url;\n  if (type === 'meals') {\n    url = `${MEALS_BASE_URL}/1/random.php`;\n  } else {\n    url = `${DRINKS_BASE_URL}/1/random.php`;\n  }\n  const response = await fetch(url);\n  const data = await response.json();\n  return (data);\n};\n\nexport const getRecipeCategories = async (type) => {\n  const [typeToken, typeUrl] = getTypeInfo(type);\n\n  const response = await fetch(`${typeUrl}/${typeToken}/list.php?c=list`);\n  const data = await response.json();\n\n  if (!data[type]) throw new Error(ERROR_MESSAGE);\n\n  return data[type].slice(0, MAX_CATEGORIES);\n};\n\nexport const getIngredients = async (type) => {\n  let url;\n  if (type === 'meals') {\n    url = `${MEALS_BASE_URL}/1/list.php?i=list`;\n  } else {\n    url = `${DRINKS_BASE_URL}/1/list.php?i=list`;\n  }\n  const response = await fetch(url);\n  const data = await response.json();\n\n  return data[type].slice(0, MAX_INGREDIENTS);\n};\n\nexport const getMealAreas = async () => {\n  const [typeToken, typeUrl] = getTypeInfo('meals');\n  const response = await fetch(`${typeUrl}/${typeToken}/list.php?a=list`);\n  const data = await response.json();\n\n  return data.meals;\n};\n\nexport const getMealsByArea = async (area) => {\n  const [typeToken, typeUrl] = getTypeInfo('meals');\n  const response = await fetch(`${typeUrl}/${typeToken}/filter.php?a=${area}`);\n  const data = await response.json();\n\n  return data.meals.slice(0, MAX_RECIPES);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nconst Button = ({ text, type, disabled, className, onClick, testId }) => (\n  <button\n    type={ type === 'submit' ? 'submit' : 'button' }\n    disabled={ disabled }\n    className={ `default-button ${className}` }\n    onClick={ onClick }\n    data-testid={ testId }\n  >\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  testId: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  type: 'button',\n  disabled: false,\n  className: '',\n  onClick: () => {},\n};\n\nexport default Button;\n","import {\n  getRecipes,\n  getRecipesByIngredient,\n  getRecipesByName,\n  getRecipesByFirstLetter,\n  getRecipesByCategory,\n  getRecipeCategories,\n  getMealsByArea,\n} from '../../services/recipesAPI';\n\nconst RECIPES_NOT_FOUND = 'Sinto muito, não encontramos nenhuma'\n+ ' receita para esses filtros.';\n\nconst MEALS_ACTIONS = {\n  SET_MEALS: 'SET_MEALS',\n  SET_FILTERED_MEALS: 'SET_FILTERED_MEALS',\n  SET_MEAL_CATEGORIES: 'SET_MEAL_CATEGORIES',\n  SET_FAVORITE: 'SET_FAVORITE',\n  REQUEST_MEALS_API: 'REQUEST_MEALS_API',\n  FAILED_MEALS_REQUEST: 'FAILED_MEALS_REQUEST',\n};\n\nconst setMeals = (meals) => ({ type: MEALS_ACTIONS.SET_MEALS, payload: meals });\n\nexport const setFilteredMeals = (meals, filterInfo = { type: '', term: '' }) => ({\n  type: MEALS_ACTIONS.SET_FILTERED_MEALS,\n  payload: { meals, filterInfo },\n});\n\nconst setCategories = (categories) => ({\n  type: MEALS_ACTIONS.SET_MEAL_CATEGORIES,\n  payload: categories,\n});\n\nconst requestApi = () => ({ type: MEALS_ACTIONS.REQUEST_MEALS_API });\n\nconst failedRequest = (error) => ({\n  type: MEALS_ACTIONS.FAILED_MEALS_REQUEST,\n  payload: error,\n});\n\nexport const fetchMealsThunk = () => async (dispatch, getState) => {\n  const {\n    meals: { filteredMeals },\n  } = getState();\n\n  if (filteredMeals.length === 0) {\n    dispatch(requestApi());\n\n    try {\n      const meals = await getRecipes('meals');\n\n      dispatch(setMeals(meals));\n      dispatch(setFilteredMeals(meals, { term: '', type: '' }));\n    } catch (error) {\n      dispatch(failedRequest(error.message));\n    }\n  }\n};\n\nexport const setMealsByIngredient = (type, search) => async (dispatch) => {\n  dispatch(requestApi());\n\n  try {\n    const meals = await getRecipesByIngredient(type, search);\n\n    dispatch(setFilteredMeals(meals, { term: search, type: 'query' }));\n  } catch (error) {\n    global.alert(RECIPES_NOT_FOUND);\n    dispatch(failedRequest(error.message));\n  }\n};\n\nexport const setMealsByName = (type, search) => async (dispatch) => {\n  dispatch(requestApi());\n\n  try {\n    const meals = await getRecipesByName(type, search);\n\n    dispatch(setFilteredMeals(meals, { term: search, type: 'query' }));\n  } catch (error) {\n    global.alert(RECIPES_NOT_FOUND);\n    dispatch(failedRequest(error.message));\n  }\n};\n\nexport const setMealsByFirstLetter = (type, search) => async (dispatch) => {\n  dispatch(requestApi());\n\n  try {\n    const meals = await getRecipesByFirstLetter(type, search);\n\n    dispatch(setFilteredMeals(meals, { term: search, type: 'query' }));\n  } catch (error) {\n    global.alert(RECIPES_NOT_FOUND);\n    dispatch(failedRequest(error.message));\n  }\n};\n\nexport const setMealsByCategory = (category) => async (dispatch) => {\n  dispatch(requestApi());\n\n  try {\n    const meals = await getRecipesByCategory('meals', category);\n\n    dispatch(setFilteredMeals(meals, { term: category, type: 'category' }));\n  } catch (error) {\n    dispatch(failedRequest(error.message));\n  }\n};\n\nexport const setMealsByArea = (area) => async (dispatch) => {\n  dispatch(requestApi());\n\n  try {\n    const meals = await getMealsByArea(area);\n\n    dispatch(setFilteredMeals(meals, { term: area, type: 'query' }));\n  } catch (error) {\n    dispatch(failedRequest(error.message));\n  }\n};\n\nexport const setMealCategories = () => async (dispatch, getState) => {\n  // dispatch(requestApi());\n\n  try {\n    const { meals } = getState();\n    const { categories } = meals;\n\n    if (!categories.length) {\n      const retrievedCategories = await getRecipeCategories('meals');\n\n      dispatch(setCategories(retrievedCategories));\n    }\n  } catch (error) {\n    dispatch(failedRequest(error.message));\n  }\n};\n\nexport default MEALS_ACTIONS;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport SearchBar from '../SearchBar';\n\nimport searchIcon from '../../images/icons/searchIcon.svg';\nimport userIcon from '../../images/icons/profileIcon.svg';\n\nimport './style.css';\n\nconst Header = ({ title, hasSearchBar }) => {\n  // const [inputValue, setInputValue] = useState('');\n  const [showInputSearch, setShowInputSearch] = useState(false);\n\n  return (\n    <header>\n      <Link to=\"/profile\" className=\"user-button\">\n        <img data-testid=\"profile-top-btn\" src={ userIcon } alt=\"Profile\" />\n      </Link>\n      <h1 className=\"page-title\" data-testid=\"page-title\">\n        {title}\n      </h1>\n      <div className=\"search-section\">\n        {showInputSearch && (\n          <SearchBar\n            showInputSearch={ showInputSearch }\n            setShowInputSearch={ setShowInputSearch }\n          />\n        )}\n        {hasSearchBar && (\n          <button\n            type=\"button\"\n            className=\"search-icon\"\n            onClick={ () => {\n              setShowInputSearch(!showInputSearch);\n            } }\n          >\n            <img\n              data-testid=\"search-top-btn\"\n              src={ searchIcon }\n              alt=\"Search\"\n            />\n          </button>\n        )}\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  hasSearchBar: PropTypes.bool,\n};\n\nHeader.defaultProps = {\n  hasSearchBar: false,\n};\n\nexport default Header;\n","import {\n  getRecipes,\n  getRecipesByIngredient,\n  getRecipesByName,\n  getRecipesByFirstLetter,\n  getRecipeCategories,\n  getRecipesByCategory,\n} from '../../services/recipesAPI';\n\nconst RECIPES_NOT_FOUND = 'Sinto muito, não encontramos nenhuma'\n+ ' receita para esses filtros.';\n\nconst DRINKS_ACTIONS = {\n  SET_DRINKS: 'SET_DRINKS',\n  SET_FILTERED_DRINKS: 'SET_FILTERED_DRINKS',\n  SET_DRINK_CATEGORIES: 'SET_DRINK_CATEGORIES',\n  REQUEST_DRINKS_API: 'REQUEST_DRINKS_API',\n  FAILED_DRINKS_REQUEST: 'FAILED_DRINKS_REQUEST',\n};\n\nconst setDrinks = (drinks) => ({\n  type: DRINKS_ACTIONS.SET_DRINKS,\n  payload: drinks,\n});\n\nexport const setFilteredDrinks = (drinks, filterInfo = { term: '', type: '' }) => ({\n  type: DRINKS_ACTIONS.SET_FILTERED_DRINKS,\n  payload: { drinks, filterInfo },\n});\n\nconst setCategories = (categories) => ({\n  type: DRINKS_ACTIONS.SET_DRINK_CATEGORIES,\n  payload: categories,\n});\n\nconst requestApi = () => ({ type: DRINKS_ACTIONS.REQUEST_DRINKS_API });\n\nconst failedRequest = (error) => ({\n  type: DRINKS_ACTIONS.FAILED_DRINKS_REQUEST,\n  payload: error,\n});\n\nexport const fetchDrinksThunk = () => async (dispatch, getState) => {\n  const {\n    drinks: { filteredDrinks },\n  } = getState();\n\n  if (filteredDrinks.length === 0) {\n    dispatch(requestApi());\n\n    try {\n      const drinks = await getRecipes('drinks');\n\n      dispatch(setDrinks(drinks));\n      dispatch(setFilteredDrinks(drinks, { term: '', type: '' }));\n    } catch (error) {\n      dispatch(failedRequest(error.message));\n    }\n  }\n};\n\nexport const setDrinksByIngredient = (type, search) => async (dispatch) => {\n  dispatch(requestApi());\n\n  try {\n    const drinks = await getRecipesByIngredient(type, search);\n\n    dispatch(setFilteredDrinks(drinks, { term: search, type: 'query' }));\n  } catch (error) {\n    global.alert(RECIPES_NOT_FOUND);\n    dispatch(failedRequest(error.message));\n  }\n};\n\nexport const setDrinksByName = (type, search) => async (dispatch) => {\n  dispatch(requestApi());\n\n  try {\n    const drinks = await getRecipesByName(type, search);\n\n    dispatch(setFilteredDrinks(drinks, { term: search, type: 'query' }));\n  } catch (error) {\n    global.alert(RECIPES_NOT_FOUND);\n    dispatch(failedRequest(error.message));\n  }\n};\n\nexport const setDrinksByFirstLetter = (type, search) => async (dispatch) => {\n  dispatch(requestApi());\n\n  try {\n    const drinks = await getRecipesByFirstLetter(type, search);\n\n    dispatch(setFilteredDrinks(drinks, { term: search, type: 'query' }));\n  } catch (error) {\n    global.alert(RECIPES_NOT_FOUND);\n    dispatch(failedRequest(error.message));\n  }\n};\n\nexport const setDrinksByCategory = (category) => async (dispatch) => {\n  dispatch(requestApi());\n\n  try {\n    const drinks = await getRecipesByCategory('drinks', category);\n\n    dispatch(setFilteredDrinks(drinks, { term: category, type: 'category' }));\n  } catch (error) {\n    dispatch(failedRequest(error.message));\n  }\n};\n\nexport const setDrinkCategories = () => async (dispatch, getState) => {\n  // dispatch(requestApi());\n\n  try {\n    const { drinks } = getState();\n    const { categories } = drinks;\n\n    if (!categories.length) {\n      const retrievedCategories = await getRecipeCategories('drinks');\n\n      dispatch(setCategories(retrievedCategories));\n    }\n  } catch (error) {\n    dispatch(failedRequest(error.message));\n  }\n};\n\nexport default DRINKS_ACTIONS;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport drinkIcon from '../../images/icons/drinkIcon.svg';\nimport exploreIcon from '../../images/icons/exploreIcon.svg';\nimport mealIcon from '../../images/icons/mealIcon.svg';\n\nimport './style.css';\n\nconst Footer = () => (\n  <footer data-testid=\"footer\">\n    <Link to=\"/drinks\">\n      <img data-testid=\"drinks-bottom-btn\" src={ drinkIcon } alt=\"Bebidas\" />\n    </Link>\n    <Link to=\"/explore\">\n      <img data-testid=\"explore-bottom-btn\" src={ exploreIcon } alt=\"Explorar\" />\n    </Link>\n    <Link to=\"/meals\">\n      <img data-testid=\"food-bottom-btn\" src={ mealIcon } alt=\"Comidas\" />\n    </Link>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\n\nimport './style.css';\n\nconst Loading = () => (\n  <div className=\"loading-container\">\n    <div className=\"loading-circle\" />\n  </div>\n);\n\nexport default Loading;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\n\nimport shareIcon from '../../images/icons/shareIcon.svg';\n\nimport './style.css';\n\nconst COPIED_LINK_ALERT_TIME = 2000;\n\nconst ShareButton = ({ type, id, testId }) => {\n  const [copiedLink, setCopiedLink] = useState(false);\n\n  function handleShareClick() {\n    const link = `${global.location.origin}/recipes-app#/${type}/${id}`;\n\n    copy(link);\n    setCopiedLink(true);\n    setTimeout(() => setCopiedLink(false), COPIED_LINK_ALERT_TIME);\n  }\n\n  return (\n    <>\n      <button type=\"button\" onClick={ handleShareClick } className=\"share-icon\">\n        <img src={ shareIcon } alt=\"share\" data-testid={ testId } />\n      </button>\n      {copiedLink && <p className=\"copy-modal\">Copied!</p>}\n    </>\n  );\n};\n\nShareButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  testId: PropTypes.string.isRequired,\n};\n\nexport default ShareButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport './style.css';\n\nconst RecipeCard = ({ id, thumb, name, index }) => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  return (\n    <button\n      type=\"button\"\n      className=\"recipe-card\"\n      data-testid={ `${index}-recipe-card` }\n      onClick={ () => history.push(`${pathname}/${id}`) }\n    >\n      <p data-testid={ `${index}-card-name` }>{name}</p>\n      <div className=\"image-container\">\n        <img data-testid={ `${index}-card-img` } src={ thumb } alt={ name } />\n      </div>\n    </button>\n  );\n};\n\nRecipeCard.propTypes = {\n  thumb: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default RecipeCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nconst Input = ({ type, icon, placeholder, value, onChange, className, testId }) => (\n  <div className={ `input-container ${className}` }>\n    <label htmlFor={ placeholder }>\n      {icon && <img src={ icon } alt={ `${placeholder}-icon` } />}\n    </label>\n\n    <input\n      id={ placeholder }\n      placeholder={ placeholder }\n      type={ type }\n      value={ value }\n      onChange={ onChange }\n      spellCheck={ false }\n      data-testid={ testId }\n    />\n\n    <div className=\"outline\" />\n  </div>\n);\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  testId: PropTypes.string,\n};\n\nInput.defaultProps = {\n  icon: undefined,\n  className: '',\n  testId: '',\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { setMealsByIngredient } from '../../redux/actions/mealsActions';\nimport { setDrinksByIngredient } from '../../redux/actions/drinksActions';\n\nimport './style.css';\n\nconst IngredientCard = ({ ingredient, index, type }) => {\n  const BASE_URL_MEAL_IMG = 'https://www.themealdb.com/images/ingredients';\n  const BASE_URL_DRINK_IMG = 'https://www.thecocktaildb.com/images/ingredients';\n  const dispatch = useDispatch();\n  let URL;\n  let ingredientName;\n  if (type === 'meals') {\n    const { strIngredient } = ingredient;\n    ingredientName = strIngredient;\n    URL = `${BASE_URL_MEAL_IMG}/${strIngredient}-Small.png`;\n  } else {\n    const { strIngredient1 } = ingredient;\n    ingredientName = strIngredient1;\n    URL = `${BASE_URL_DRINK_IMG}/${strIngredient1}-Small.png`;\n  }\n\n  const handleClick = () => {\n    if (type === 'meals') {\n      dispatch(setMealsByIngredient(type, ingredientName));\n    } else {\n      dispatch(setDrinksByIngredient(type, ingredientName));\n    }\n  };\n\n  return (\n    <Link\n      className=\"ingredient-card\"\n      to={ type === 'meals' ? '/meals' : '/drinks' }\n      onClick={ handleClick }\n      data-testid={ `${index}-ingredient-card` }\n    >\n      <p data-testid={ `${index}-card-name` }>{ingredientName}</p>\n      <div className=\"image-container\">\n        <img data-testid={ `${index}-card-img` } src={ URL } alt={ ingredientName } />\n      </div>\n    </Link>\n  );\n};\n\nIngredientCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  ingredient: PropTypes.shape({\n    strIngredient: PropTypes.string,\n    strIngredient1: PropTypes.string,\n  }),\n  type: PropTypes.string.isRequired,\n};\n\nIngredientCard.defaultProps = {\n  ingredient: PropTypes.shape({\n    strIngredient: '',\n    strIngredient1: '',\n  }).isRequired,\n};\n\nexport default IngredientCard;\n","module.exports = __webpack_public_path__ + \"static/media/logo.8000cbd4.png\";","module.exports = __webpack_public_path__ + \"static/media/email.3e8aa4fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/password.7ec5915e.svg\";","module.exports = __webpack_public_path__ + \"static/media/shareIcon.8c1374e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.bd863160.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.9ec8df01.svg\";","module.exports = __webpack_public_path__ + \"static/media/backIcon.f05e56a5.svg\";","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport Input from '../Input';\nimport Button from '../Button';\n\nimport {\n  setDrinksByIngredient,\n  setDrinksByName,\n  setDrinksByFirstLetter,\n} from '../../redux/actions/drinksActions';\n\nimport {\n  setMealsByIngredient,\n  setMealsByName,\n  setMealsByFirstLetter,\n} from '../../redux/actions/mealsActions';\n\nimport './style.css';\n\nconst typeTable = {\n  '/meals': 'meals',\n  '/drinks': 'drinks',\n};\n\nfunction SearchBar({ showInputSearch, setShowInputSearch }) {\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n\n  const [searchInput, setSearchInput] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState('');\n\n  const thunkTable = {\n    meals: {\n      ingredients: () => dispatch(setMealsByIngredient('meals', searchInput)),\n      name: () => dispatch(setMealsByName('meals', searchInput)),\n      firstLetter: () => dispatch(setMealsByFirstLetter('meals', searchInput)),\n    },\n    drinks: {\n      ingredients: () => dispatch(setDrinksByIngredient('drinks', searchInput)),\n      name: () => dispatch(setDrinksByName('drinks', searchInput)),\n      firstLetter: () => dispatch(setDrinksByFirstLetter('drinks', searchInput)),\n    },\n  };\n\n  const filterTable = {\n    ingredients: (recipeType) => {\n      thunkTable[recipeType].ingredients();\n    },\n    name: (recipeType) => {\n      thunkTable[recipeType].name();\n    },\n    firstLetter: async (recipeType) => {\n      if (searchInput.length === 1) {\n        thunkTable[recipeType].firstLetter();\n      } else {\n        global.alert('Sua busca deve conter somente 1 (um) caracter');\n      }\n    },\n  };\n\n  const handleChange = ({ target: { value } }) => {\n    setSelectedFilter(value);\n  };\n\n  const handleClick = async () => {\n    const recipeType = typeTable[pathname];\n\n    filterTable[selectedFilter](recipeType);\n\n    setShowInputSearch(!showInputSearch);\n  };\n\n  return (\n    <div className=\"search-bar\">\n      <Input\n        type=\"text\"\n        placeholder=\"Buscar Receita\"\n        value={ searchInput }\n        onChange={ ({ target }) => setSearchInput(target.value) }\n        className=\"search-input\"\n        testId=\"search-input\"\n      />\n\n      <div className=\"search-types\">\n        <label htmlFor=\"ingredient-search\">\n          <input\n            id=\"ingredient-search\"\n            type=\"radio\"\n            value=\"ingredients\"\n            checked={ selectedFilter === 'ingredients' }\n            onChange={ handleChange }\n          />\n          <span\n            className=\"radio-control\"\n            data-testid=\"ingredient-search-radio\"\n          />\n          Ingredients\n        </label>\n        <label htmlFor=\"name-search\">\n          <input\n            id=\"name-search\"\n            type=\"radio\"\n            value=\"name\"\n            checked={ selectedFilter === 'name' }\n            onChange={ handleChange }\n          />\n          <span className=\"radio-control\" data-testid=\"name-search-radio\" />\n          Name\n        </label>\n        <label htmlFor=\"first-letter-search\">\n          <input\n            id=\"first-letter-search\"\n            type=\"radio\"\n            value=\"firstLetter\"\n            checked={ selectedFilter === 'firstLetter' }\n            onChange={ handleChange }\n          />\n          <span\n            className=\"radio-control\"\n            data-testid=\"first-letter-search-radio\"\n          />\n          First Letter\n        </label>\n      </div>\n\n      <Button\n        type=\"button\"\n        onClick={ handleClick }\n        text=\"Search\"\n        testId=\"exec-search-btn\"\n      />\n    </div>\n  );\n}\n\nSearchBar.propTypes = {\n  showInputSearch: PropTypes.bool.isRequired,\n  setShowInputSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","module.exports = __webpack_public_path__ + \"static/media/searchIcon.d5de6de8.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.04b0fa60.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.c73a5c80.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.ce55ae2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.d602865a.svg\";","import React, { useEffect, useState } from 'react';\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport IngredientCard from '../../components/IngredientCard';\nimport Loading from '../../components/Loading';\n\nimport { getIngredients } from '../../services/recipesAPI';\n\nimport './style.css';\n\nconst MealIngredients = () => {\n  const [ingredients, setIngredients] = useState([]);\n  const [isFetching, setFetching] = useState(true);\n\n  useEffect(() => {\n    async function fetchIngredients() {\n      try {\n        setFetching(true);\n        const ingredientsList = await getIngredients('meals');\n        setIngredients(ingredientsList);\n        setFetching(false);\n      } catch (error) {\n        global.alert('No ingredients found!');\n      }\n    }\n    fetchIngredients();\n  }, []);\n\n  return (\n    <>\n      <Header title=\"Explore Ingredients\" />\n      <div className=\"explore-ingredients\">\n        {isFetching ? (\n          <Loading />\n        ) : (\n          ingredients.map((ingredient, index) => (\n            <IngredientCard\n              key={ index }\n              index={ index }\n              ingredient={ ingredient }\n              type=\"meals\"\n            />\n          ))\n        )}\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default MealIngredients;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport RecipeCard from '../../components/RecipeCard';\nimport Loading from '../../components/Loading';\n\nimport { getMealAreas } from '../../services/recipesAPI';\nimport {\n  setMealsByArea,\n  setFilteredMeals,\n  fetchMealsThunk,\n} from '../../redux/actions/mealsActions';\n\nimport './style.css';\n\nconst MealAreas = () => {\n  const [areas, setAreas] = useState([]);\n  const [selectedArea, setSelectedArea] = useState('');\n  const { filteredMeals } = useSelector(({ meals }) => meals);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    async function fetchAreas() {\n      try {\n        const areaList = await getMealAreas();\n        setAreas(areaList);\n        setSelectedArea(areaList[0].strArea);\n      } catch (error) {\n        global.alert('Não foram encontradas receitas');\n      }\n    }\n    fetchAreas();\n  }, []);\n\n  useEffect(() => {\n    if (selectedArea && selectedArea !== 'All') {\n      dispatch(setMealsByArea(selectedArea));\n    } else if (selectedArea === 'All') {\n      dispatch(setFilteredMeals([], ''));\n      dispatch(fetchMealsThunk());\n    }\n  }, [selectedArea, dispatch]);\n\n  return (\n    <>\n      <Header title=\"Explore Areas\" />\n      <div className=\"meal-areas-container\">\n        <div className=\"select-container\">\n          <select\n            data-testid=\"explore-by-area-dropdown\"\n            value={ selectedArea }\n            onChange={ ({ target }) => setSelectedArea(target.value) }\n          >\n            <option value=\"All\" data-testid=\"All-option\">\n              All\n            </option>\n            {areas.map(({ strArea: area }) => (\n              <option key={ area } value={ area } data-testid={ `${area}-option` }>\n                {area}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"recipe-list\">\n          {selectedArea ? (\n            filteredMeals.map(({ idMeal, strMealThumb, strMeal }, index) => (\n              <RecipeCard\n                key={ idMeal }\n                id={ idMeal }\n                thumb={ strMealThumb }\n                name={ strMeal }\n                index={ index }\n              />\n            ))\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default MealAreas;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport Button from '../../components/Button';\n\nimport { getRandomRecipe } from '../../services/recipesAPI';\n\nimport './style.css';\n\nconst ExploreMeals = ({ history }) => {\n  const handleClick = async () => {\n    try {\n      const { meals } = await getRandomRecipe('meals');\n      const { idMeal } = meals[0];\n      history.push(`/meals/${idMeal}`);\n    } catch (error) {\n      global.alert('no meal found');\n    }\n  };\n\n  return (\n    <>\n      <Header title=\"Explore Meals\" />\n      <div className=\"explore-meals\">\n        <div className=\"explore-meal-ingredients\">\n          <Button\n            text=\"By Ingredients\"\n            onClick={ () => history.push('/explore/meals/ingredients') }\n            testId=\"explore-by-ingredient\"\n          />\n        </div>\n        <div className=\"explore-meal-areas\">\n          <Button\n            text=\"By Area\"\n            onClick={ () => history.push('/explore/meals/area') }\n            testId=\"explore-by-area\"\n          />\n        </div>\n        <div className=\"explore-random-meal\">\n          <Button\n            text=\"Surprise me!\"\n            onClick={ handleClick }\n            testId=\"explore-surprise\"\n          />\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nExploreMeals.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default ExploreMeals;\n","import React, { useState, useEffect } from 'react';\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport IngredientCard from '../../components/IngredientCard';\nimport Loading from '../../components/Loading';\n\nimport { getIngredients } from '../../services/recipesAPI';\n\nconst DrinkIngredients = () => {\n  const [ingredients, setIngredients] = useState([]);\n  const [isFetching, setFetching] = useState(true);\n\n  useEffect(() => {\n    async function fetchIngredients() {\n      try {\n        setFetching(true);\n        const ingredientsList = await getIngredients('drinks');\n        setIngredients(ingredientsList);\n        setFetching(false);\n      } catch (error) {\n        global.alert('No ingredients found');\n      }\n    }\n    fetchIngredients();\n  }, []);\n\n  return (\n    <>\n      <Header title=\"Explore Ingredients\" />\n      <div className=\"explore-ingredients\">\n        {isFetching ? (\n          <Loading />\n        ) : (\n          ingredients.map((ingredient, index) => (\n            <IngredientCard\n              key={ index }\n              index={ index }\n              ingredient={ ingredient }\n              type=\"drinks\"\n            />\n          ))\n        )}\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default DrinkIngredients;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport Button from '../../components/Button';\n\nimport { getRandomRecipe } from '../../services/recipesAPI';\n\nimport './style.css';\n\nconst ExploreDrinks = ({ history }) => {\n  const handleClick = async () => {\n    try {\n      const { drinks } = await getRandomRecipe('drinks');\n      const { idDrink } = drinks[0];\n      history.push(`/drinks/${idDrink}`);\n    } catch (error) {\n      global.alert('nenhuma receita encontrada');\n    }\n  };\n\n  return (\n    <>\n      <Header title=\"Explore Drinks\" />\n      <div className=\"explore-drinks\">\n        <div className=\"explore-drink-ingredients\">\n          <Button\n            text=\"By Ingredients\"\n            onClick={ () => history.push('/explore/drinks/ingredients') }\n            testId=\"explore-by-ingredient\"\n          />\n        </div>\n        <div className=\"explore-random-drink\">\n          <Button\n            text=\"Surprise me!\"\n            onClick={ handleClick }\n            testId=\"explore-surprise\"\n          />\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nExploreDrinks.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default ExploreDrinks;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport logo from '../../images/logo.png';\nimport emailIcon from '../../images/icons/email.svg';\nimport passwordIcon from '../../images/icons/password.svg';\n\nimport './style.css';\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n\n    localStorage.setItem('user', JSON.stringify({ email }));\n    localStorage.setItem('mealsToken', '1');\n    localStorage.setItem('cocktailsToken', '1');\n    localStorage.setItem(\n      'inProgressRecipes',\n      JSON.stringify({ meals: {}, cocktails: {} }),\n    );\n    localStorage.setItem('doneRecipes', JSON.stringify([]));\n    history.push('/meals');\n  };\n\n  const REGEX = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const MIN_PASSWORD_LENGTH = 6;\n\n  return (\n    <div className=\"login-page\">\n      <img className=\"logo\" src={ logo } alt=\"logo\" />\n      <form className=\"login-form\" onSubmit={ handleLogin }>\n        <Input\n          type=\"email\"\n          icon={ emailIcon }\n          placeholder=\"Email\"\n          value={ email }\n          onChange={ (e) => setEmail(e.target.value) }\n          testId=\"email-input\"\n        />\n        <Input\n          type=\"password\"\n          icon={ passwordIcon }\n          placeholder=\"Password\"\n          value={ password }\n          onChange={ (e) => setPassword(e.target.value) }\n          testId=\"password-input\"\n        />\n        <Button\n          type=\"submit\"\n          disabled={\n            !(REGEX.test(email) && password.length > MIN_PASSWORD_LENGTH)\n          }\n          text=\"Sign In\"\n          testId=\"login-submit-btn\"\n        />\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","const FAVORITE_RECIPES_ACTIONS = {\n  ADD_FAVORITE_RECIPE: 'ADD_FAVORITE_RECIPE',\n  REMOVE_FAVORITE_RECIPE: 'REMOVE_FAVORITE_RECIPE',\n};\n\nconst addFavoriteRecipe = (recipe) => ({\n  type: FAVORITE_RECIPES_ACTIONS.ADD_FAVORITE_RECIPE,\n  payload: recipe,\n});\n\nconst removeFavoriteRecipe = (recipeId) => ({\n  type: FAVORITE_RECIPES_ACTIONS.REMOVE_FAVORITE_RECIPE,\n  payload: recipeId,\n});\n\nexport const toggleFavoriteRecipe = (recipe, isFavorite) => (dispatch) => {\n  if (isFavorite) {\n    dispatch(removeFavoriteRecipe(recipe.id));\n  } else {\n    dispatch(addFavoriteRecipe(recipe));\n  }\n};\n\nexport default FAVORITE_RECIPES_ACTIONS;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { toggleFavoriteRecipe } from '../../redux/actions/favoriteRecipesActions';\n\nimport filledHeart from '../../images/icons/blackHeartIcon.svg';\nimport outlineHeart from '../../images/icons/whiteHeartIcon.svg';\n\nimport './style.css';\n\nconst FavoriteButton = ({ recipe, type, testId }) => {\n  const { favoriteRecipes } = useSelector((state) => state);\n  const [isFavorite, setFavorite] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const recipeId = type === 'Meal' ? recipe.idMeal : recipe.idDrink;\n\n    setFavorite(\n      favoriteRecipes.some(({ id }) => id === recipeId || id === recipe.id),\n    );\n  }, [favoriteRecipes, recipe, type]);\n\n  function getFavoriteShape() {\n    if (recipe[`id${type}`]) {\n      return {\n        id: recipe[`id${type}`],\n        type: type.toLowerCase(),\n        area: recipe.strArea || '',\n        category: recipe.strCategory,\n        alcoholicOrNot: recipe.strAlcoholic || '',\n        name: recipe[`str${type}`],\n        image: recipe[`str${type}Thumb`],\n      };\n    }\n\n    return recipe;\n  }\n\n  function handleFavoriteClick() {\n    const favoriteShape = getFavoriteShape();\n\n    dispatch(toggleFavoriteRecipe(favoriteShape, isFavorite));\n    setFavorite(!isFavorite);\n  }\n\n  return (\n    <button\n      className=\"favorite-button\"\n      type=\"button\"\n      onClick={ handleFavoriteClick }\n    >\n      <img\n        data-testid={ testId }\n        src={ isFavorite ? filledHeart : outlineHeart }\n        alt=\"favorite\"\n      />\n    </button>\n  );\n};\n\nFavoriteButton.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.any).isRequired,\n  type: PropTypes.string.isRequired,\n  testId: PropTypes.string.isRequired,\n};\n\nexport default FavoriteButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nconst IngredientCheckbox = ({ text, name, isChecked, onChange, index }) => (\n  <label\n    data-testid={ `${index}-ingredient-step` }\n    htmlFor={ `${index}-ingredient` }\n    className={\n      isChecked ? 'ingredient-checkbox finished' : 'ingredient-checkbox'\n    }\n  >\n    <input\n      type=\"checkbox\"\n      id={ `${index}-ingredient` }\n      name={ name }\n      checked={ isChecked }\n      onChange={ onChange }\n    />\n    <div className=\"custom-checkbox\">\n      <div className=\"checkmark\" />\n    </div>\n    {text}\n  </label>\n);\n\nIngredientCheckbox.propTypes = {\n  text: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isChecked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default IngredientCheckbox;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { setFilteredMeals } from '../../redux/actions/mealsActions';\nimport { setFilteredDrinks } from '../../redux/actions/drinksActions';\n\nimport backIcon from '../../images/icons/backIcon.svg';\n\nimport './style.css';\n\nconst BackButton = () => {\n  const { mealList } = useSelector(({ meals }) => meals);\n  const { drinkList } = useSelector(({ drinks }) => drinks);\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n  const { pathname } = history.location;\n  const path = pathname.match(/meals|drinks/)[0];\n\n  const handleClick = () => {\n    if (path === 'meals') {\n      dispatch(setFilteredMeals(mealList));\n    } else {\n      dispatch(setFilteredDrinks(drinkList));\n    }\n    history.goBack();\n  };\n\n  return (\n    <button className=\"back-button\" type=\"button\" onClick={ handleClick }>\n      <img src={ backIcon } alt=\"back\" />\n    </button>\n  );\n};\n\nexport default BackButton;\n","const IN_PROGRESS_RECIPES_ACTIONS = {\n  SET_IN_PROGRESS_MEAL: 'SET_IN_PROGRESS_MEAL',\n  REMOVE_IN_PROGRESS_MEAL: 'REMOVE_IN_PROGRESS_MEAL',\n  SET_IN_PROGRESS_COCKTAIL: 'SET_IN_PROGRESS_COCKTAIL',\n  REMOVE_IN_PROGRESS_COCKTAIL: 'REMOVE_IN_PROGRESS_COCKTAIL',\n};\n\nconst setInProgressMeal = (id, ingredientsProgress) => ({\n  type: IN_PROGRESS_RECIPES_ACTIONS.SET_IN_PROGRESS_MEAL,\n  payload: { [id]: ingredientsProgress },\n});\n\nexport const removeInProgressMeal = (id) => ({\n  type: IN_PROGRESS_RECIPES_ACTIONS.REMOVE_IN_PROGRESS_MEAL,\n  payload: id,\n});\n\nconst setInProgressCocktail = (id, ingredientsProgress) => ({\n  type: IN_PROGRESS_RECIPES_ACTIONS.SET_IN_PROGRESS_COCKTAIL,\n  payload: { [id]: ingredientsProgress },\n});\n\nexport const removeInProgressCocktail = (id) => ({\n  type: IN_PROGRESS_RECIPES_ACTIONS.REMOVE_IN_PROGRESS_COCKTAIL,\n  payload: id,\n});\n\nexport const addRecipeIngredient = (id, type, ingredient) => (dispatch, getState) => {\n  const { inProgressRecipes } = getState();\n  const recipes = type === 'bebida'\n    ? inProgressRecipes.cocktails\n    : inProgressRecipes.meals;\n\n  const currentMealProgress = recipes[id] || [];\n  const updatedProgress = [...currentMealProgress, ingredient];\n\n  dispatch(\n    type === 'bebida'\n      ? setInProgressCocktail(id, updatedProgress)\n      : setInProgressMeal(id, updatedProgress),\n  );\n};\n\nexport const removeRecipeIngredient = (id, type, ingredient) => (dispatch, getState) => {\n  const { inProgressRecipes } = getState();\n  const recipes = type === 'bebida'\n    ? inProgressRecipes.cocktails\n    : inProgressRecipes.meals;\n\n  const currentMealProgress = recipes[id] || [];\n  const updatedProgress = currentMealProgress.filter(\n    (currentIngredient) => currentIngredient !== ingredient,\n  );\n\n  dispatch(\n    type === 'bebida'\n      ? setInProgressCocktail(id, updatedProgress)\n      : setInProgressMeal(id, updatedProgress),\n  );\n};\n\nexport default IN_PROGRESS_RECIPES_ACTIONS;\n","import {\n  removeInProgressMeal,\n  removeInProgressCocktail,\n} from './inProgressRecipesActions';\n\nconst DONE_RECIPES_ACTIONS = {\n  ADD_DONE_RECIPE: 'ADD_DONE_RECIPE',\n};\n\nconst addDoneRecipe = (recipe) => ({\n  type: DONE_RECIPES_ACTIONS.ADD_DONE_RECIPE,\n  payload: recipe,\n});\n\nexport const setDoneRecipe = (recipe, type) => (dispatch) => {\n  const doneRecipe = {\n    id: recipe[`id${type}`],\n    type: type.toLowerCase(),\n    area: recipe.strArea,\n    category: recipe.strCategory,\n    alcoholicOrNot: recipe.strAlcoholic || '',\n    name: recipe[`str${type}`],\n    image: recipe[`str${type}Thumb`],\n    doneDate: Intl.DateTimeFormat('pt-BR').format(Date.now()),\n    tags: recipe.strTags ? recipe.strTags.split(',') : [],\n  };\n\n  if (type === 'Meal') {\n    dispatch(removeInProgressMeal(recipe[`id${type}`]));\n  } else {\n    dispatch(removeInProgressCocktail(recipe[`id${type}`]));\n  }\n\n  dispatch(addDoneRecipe(doneRecipe));\n};\n\nexport default DONE_RECIPES_ACTIONS;\n","const MAX_INGREDIENTS = 20;\n\nconst getIngredients = (recipe) => {\n  const ingredients = [];\n\n  for (let i = 0; i < MAX_INGREDIENTS; i += 1) {\n    const currentIngredient = recipe[`strIngredient${i}`];\n    const currentMeasure = recipe[`strMeasure${i}`] || '';\n\n    if (currentIngredient) {\n      ingredients.push({ ingredient: currentIngredient, measure: currentMeasure });\n    }\n  }\n\n  return ingredients;\n};\n\nexport default getIngredients;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport ShareButton from '../../components/ShareButton';\nimport FavoriteButton from '../../components/FavoriteButton';\nimport IngredientCheckbox from '../../components/IngredientCheckbox';\nimport BackButton from '../../components/BackButton';\nimport Button from '../../components/Button';\n\nimport {\n  addRecipeIngredient,\n  removeRecipeIngredient,\n} from '../../redux/actions/inProgressRecipesActions';\n\nimport { setDoneRecipe } from '../../redux/actions/doneRecipesActions';\n\nimport getIngredients from '../../utils/getIngredients';\n\nimport './style.css';\n\nfunction MealProgress() {\n  const [meal, setMeal] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const progressInfo = useSelector(\n    ({ inProgressRecipes }) => inProgressRecipes.meals[id] || [],\n  );\n\n  useEffect(() => {\n    async function getMeal() {\n      const promiseMeals = await fetch(\n        `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`,\n      );\n      const fetchedMeal = await promiseMeals.json();\n      setMeal(fetchedMeal.meals[0]);\n    }\n\n    getMeal();\n  }, [id]);\n\n  useEffect(() => {\n    setIngredients(getIngredients(meal));\n  }, [meal]);\n\n  function handleChange(ingredient, isChecked) {\n    if (!isChecked) {\n      dispatch(addRecipeIngredient(id, 'comida', ingredient));\n    } else {\n      dispatch(removeRecipeIngredient(id, 'comida', ingredient));\n    }\n  }\n\n  function handleClickComidas() {\n    dispatch(setDoneRecipe(meal, 'Meal'));\n    history.push('/finished-recipes');\n  }\n\n  return (\n    <div className=\"recipe-details recipe-progress\">\n      <BackButton />\n      <img\n        className=\"recipe-image\"\n        data-testid=\"recipe-photo\"\n        src={ meal.strMealThumb }\n        alt={ meal.strMeal }\n      />\n      <div className=\"recipe-info\">\n        <div className=\"info-header\">\n          <div className=\"name-section\">\n            <h1 data-testid=\"recipe-title\">{meal.strMeal}</h1>\n            <p data-testid=\"recipe-category\">{meal.strCategory}</p>\n          </div>\n          <div className=\"icons-section\">\n            <ShareButton type=\"meals\" id={ id } testId=\"share-btn\" />\n            <FavoriteButton recipe={ meal } type=\"Meal\" testId=\"favorite-btn\" />\n          </div>\n        </div>\n\n        <p className=\"section-name\">Ingredients</p>\n\n        <div className=\"ingredients-section\">\n          {ingredients.map(({ ingredient, measure }, index) => {\n            const ingredientKey = `${ingredient} - ${measure}`;\n            const isChecked = progressInfo.includes(ingredientKey);\n            return (\n              <IngredientCheckbox\n                name=\"progress\"\n                key={ ingredientKey }\n                text={ ingredientKey }\n                isChecked={ isChecked }\n                onChange={ () => handleChange(ingredientKey, isChecked) }\n                index={ index }\n              />\n            );\n          })}\n        </div>\n\n        <p className=\"section-name\">Instructions</p>\n        <p className=\"instructions\" data-testid=\"instructions\">\n          {meal.strInstructions}\n        </p>\n\n        <Button\n          disabled={ progressInfo.length !== ingredients.length }\n          text=\"Finish Recipe\"\n          onClick={ () => handleClickComidas() }\n          testId=\"finish-recipe-btn\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MealProgress;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Loading from '../../components/Loading';\nimport ShareButton from '../../components/ShareButton';\nimport FavoriteButton from '../../components/FavoriteButton';\nimport BackButton from '../../components/BackButton';\nimport Button from '../../components/Button';\n\nimport getIngredients from '../../utils/getIngredients';\nimport { getRecipes, getRecipeById } from '../../services/recipesAPI';\n\nimport './style.css';\n\nconst MAX_RECOMENDATIONS = 6;\n\nconst MealDetails = () => {\n  const [meal, setMeal] = useState({});\n  const [drinks, setDrinks] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n\n  const history = useHistory();\n  const { id } = useParams();\n\n  const isDone = useSelector(({ doneRecipes }) => doneRecipes\n    .some((recipe) => recipe.id === id));\n  const isInProgress = useSelector(\n    ({ inProgressRecipes }) => !!inProgressRecipes.meals[id],\n  );\n\n  useEffect(() => {\n    async function getMeal() {\n      const data = await getRecipeById('meals', id);\n      setMeal(data);\n    }\n    getMeal();\n  }, [id]);\n\n  useEffect(() => {\n    async function getDrinks() {\n      const data = await getRecipes('drinks');\n      setDrinks(data.slice(0, MAX_RECOMENDATIONS));\n    }\n    getDrinks();\n  }, []);\n\n  useEffect(() => {\n    setIngredients(getIngredients(meal));\n  }, [meal]);\n\n  function startRecipe() {\n    history.push(`/meals/${id}/in-progress`);\n  }\n\n  if (!meal.strMeal) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"recipe-details\">\n      <BackButton />\n      <img\n        className=\"recipe-image\"\n        data-testid=\"recipe-photo\"\n        src={ meal.strMealThumb }\n        alt={ meal.strMeal }\n      />\n      <div className={ `recipe-info ${isDone && 'no-bottom-padding'}` }>\n        <div className=\"info-header\">\n          <div className=\"name-section\">\n            <h1 data-testid=\"recipe-title\">{meal.strMeal}</h1>\n            <p data-testid=\"recipe-category\">{meal.strCategory}</p>\n          </div>\n          <div className=\"icons-section\">\n            <ShareButton type=\"meals\" id={ meal.idMeal } testId=\"share-btn\" />\n            <FavoriteButton recipe={ meal } type=\"Meal\" testId=\"favorite-btn\" />\n          </div>\n        </div>\n\n        <p className=\"section-name\">Ingredients</p>\n\n        <div className=\"ingredients-section\">\n          {ingredients.map(({ ingredient, measure }, index) => (\n            <div\n              key={ index }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              <p>\n                {`- ${ingredient}`}\n                {measure && <span>{` - ${measure}`}</span>}\n              </p>\n            </div>\n          ))}\n        </div>\n\n        <p className=\"section-name\">Instructions</p>\n        <p className=\"instructions\" data-testid=\"instructions\">\n          {meal.strInstructions}\n        </p>\n\n        <p className=\"section-name\">Video</p>\n        <iframe\n          className=\"recipe-video\"\n          data-testid=\"video\"\n          src={ meal.strYoutube.replace('watch?v=', 'embed/') }\n          title={ meal.strMeal }\n        />\n\n        <p className=\"section-name\">Recommendations</p>\n        <div className=\"carousel\">\n          {drinks.map((drink, index) => (\n            <div\n              className=\"recommendation-card\"\n              data-testid={ `${index}-recomendation-card` }\n              key={ drink.strDrink }\n            >\n              <span data-testid={ `${index}-recomendation-title` }>\n                {drink.strDrink}\n              </span>\n              <div className=\"image-container\">\n                <img src={ drink.strDrinkThumb } alt={ drink.strDrink } />\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {!isDone && (\n          <Button\n            text={ isInProgress ? 'Continue Recipe' : 'Start Recipe' }\n            onClick={ () => startRecipe() }\n            testId=\"start-recipe-btn\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MealDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nconst CategoryButton = ({ category, handleFilterClick, testId, activeFilter }) => (\n  <button\n    className={ `category-button ${activeFilter === category && 'active-filter'}` }\n    type=\"button\"\n    data-testid={ testId }\n    onClick={ () => handleFilterClick(category) }\n  >\n    {category.replace('Milk / ', '')}\n  </button>\n);\n\nCategoryButton.propTypes = {\n  category: PropTypes.string.isRequired,\n  handleFilterClick: PropTypes.func.isRequired,\n  activeFilter: PropTypes.string.isRequired,\n  testId: PropTypes.string,\n};\n\nCategoryButton.defaultProps = {\n  testId: '',\n};\n\nexport default CategoryButton;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport CategoryButton from '../CategoryButton';\n\nimport {\n  setDrinkCategories,\n  setDrinksByCategory,\n  setFilteredDrinks,\n} from '../../redux/actions/drinksActions';\nimport {\n  setMealCategories,\n  setMealsByCategory,\n  setFilteredMeals,\n} from '../../redux/actions/mealsActions';\n\nimport './style.css';\n\nconst CategoryFilters = ({ type }) => {\n  const categories = useSelector((state) => state[type].categories);\n  const { mealList } = useSelector(({ meals }) => meals);\n  const { drinkList } = useSelector(({ drinks }) => drinks);\n\n  const activeFilter = useSelector(({ meals, drinks }) => {\n    if (type === 'meals') {\n      const { term, type: filterType } = meals.filterInfo;\n\n      if (term && filterType === 'category') return term;\n\n      return 'All';\n    }\n\n    const { term, type: filterType } = drinks.filterInfo;\n\n    if (term && filterType === 'category') return term;\n\n    return 'All';\n  });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (type === 'meals') {\n      dispatch(setMealCategories());\n    } else {\n      dispatch(setDrinkCategories());\n    }\n  }, [dispatch, type]);\n\n  const handleAllClick = () => {\n    if (type === 'meals') {\n      dispatch(setFilteredMeals(mealList, { term: '', type: 'category' }));\n    } else {\n      dispatch(setFilteredDrinks(drinkList, { term: '', type: 'category' }));\n    }\n  };\n\n  const handleFilterClick = (category) => {\n    if (type === 'meals') {\n      if (activeFilter === category) {\n        dispatch(\n          setFilteredMeals(mealList, { term: category, type: 'category' }),\n        );\n      } else {\n        dispatch(setMealsByCategory(category));\n      }\n    } else if (activeFilter === category) {\n      dispatch(\n        setFilteredDrinks(drinkList, { term: category, type: 'category' }),\n      );\n    } else {\n      dispatch(setDrinksByCategory(category));\n    }\n  };\n\n  return (\n    <div className=\"category-filters\">\n      <CategoryButton\n        category=\"All\"\n        type={ type }\n        handleFilterClick={ handleAllClick }\n        testId=\"All-category-filter\"\n        activeFilter={ activeFilter }\n      />\n      {categories.map(({ strCategory: category }) => (\n        <CategoryButton\n          key={ category }\n          category={ category }\n          testId={ `${category}-category-filter` }\n          type={ type }\n          handleFilterClick={ handleFilterClick }\n          activeFilter={ activeFilter }\n        />\n      ))}\n    </div>\n  );\n};\n\nCategoryFilters.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default CategoryFilters;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport RecipeCard from '../../components/RecipeCard';\nimport Loading from '../../components/Loading';\nimport CategoryFilters from '../../components/CategoryFilters';\n\nimport { fetchMealsThunk } from '../../redux/actions/mealsActions';\n\nimport './style.css';\n\nconst Meals = () => {\n  const { filteredMeals, isFetching, filterInfo } = useSelector(\n    ({ meals }) => meals,\n  );\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(fetchMealsThunk());\n  }, [dispatch]);\n\n  if (filteredMeals.length === 1 && filterInfo.type === 'query') {\n    const { idMeal } = filteredMeals[0];\n\n    history.push(`/meals/${idMeal}`);\n  }\n\n  return (\n    <>\n      <Header title=\"Meals\" hasSearchBar />\n      <div className=\"recipes-content\">\n        <CategoryFilters type=\"meals\" />\n        {isFetching ? (\n          <Loading />\n        ) : (\n          <div className=\"recipe-list\">\n            {filteredMeals.map(({ idMeal, strMealThumb, strMeal }, index) => (\n              <RecipeCard\n                key={ idMeal }\n                id={ idMeal }\n                thumb={ strMealThumb }\n                name={ strMeal }\n                index={ index }\n              />\n            ))}\n          </div>\n        )}\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default Meals;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Loading from '../../components/Loading';\nimport ShareButton from '../../components/ShareButton';\nimport FavoriteButton from '../../components/FavoriteButton';\nimport BackButton from '../../components/BackButton';\nimport Button from '../../components/Button';\n\nimport getIngredients from '../../utils/getIngredients';\nimport { getRecipes, getRecipeById } from '../../services/recipesAPI';\n\nimport './style.css';\n\nconst MAX_RECOMENDATIONS = 6;\n\nconst DrinkDetails = () => {\n  const [drink, setDrink] = useState({});\n  const [meals, setMeals] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n\n  const history = useHistory();\n  const { id } = useParams();\n\n  const isDone = useSelector(({ doneRecipes }) => doneRecipes\n    .some((recipe) => recipe.id === id));\n  const isInProgress = useSelector(\n    ({ inProgressRecipes }) => !!inProgressRecipes.cocktails[id],\n  );\n\n  useEffect(() => {\n    async function getDrink() {\n      const data = await getRecipeById('drinks', id);\n\n      setDrink(data);\n    }\n    getDrink();\n  }, [id]);\n\n  useEffect(() => {\n    async function getMeals() {\n      const data = await getRecipes('meals');\n      setMeals(data.slice(0, MAX_RECOMENDATIONS));\n    }\n\n    getMeals();\n  }, []);\n\n  useEffect(() => {\n    setIngredients(getIngredients(drink));\n  }, [drink]);\n\n  function startRecipe() {\n    history.push(`/drinks/${id}/in-progress`);\n  }\n\n  if (!drink.strDrink) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"recipe-details\">\n      <BackButton />\n      <img\n        className=\"recipe-image\"\n        data-testid=\"recipe-photo\"\n        src={ drink.strDrinkThumb }\n        alt={ drink.strDrink }\n      />\n      <div className={ `recipe-info ${isDone && 'no-bottom-padding'}` }>\n        <div className=\"info-header\">\n          <div className=\"name-section\">\n            <h1 data-testid=\"recipe-title\">{drink.strDrink}</h1>\n            <p data-testid=\"recipe-category\">{drink.strAlcoholic}</p>\n          </div>\n          <div className=\"icons-section\">\n            <ShareButton type=\"drinks\" id={ drink.idDrink } testId=\"share-btn\" />\n            <FavoriteButton\n              recipe={ drink }\n              type=\"Drink\"\n              testId=\"favorite-btn\"\n            />\n          </div>\n        </div>\n\n        <div className=\"section-name\">Ingredients</div>\n\n        <div className=\"ingredients-section\">\n          {ingredients.map(({ ingredient, measure }, index) => (\n            <div\n              key={ index }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              <p>\n                {`- ${ingredient}`}\n                {measure && <span>{` - ${measure}`}</span>}\n              </p>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"section-name\">Instructions</div>\n        <p className=\"instructions\" data-testid=\"instructions\">\n          {drink.strInstructions}\n        </p>\n\n        <div className=\"section-name\">Recommendations</div>\n        <div className=\"carousel\">\n          {meals.map((meal, index) => (\n            <div\n              className=\"recommendation-card\"\n              data-testid={ `${index}-recomendation-card` }\n              key={ meal.strMeal }\n            >\n              <span data-testid={ `${index}-recomendation-title` }>\n                {meal.strMeal}\n              </span>\n              <div className=\"image-container\">\n                <img src={ meal.strMealThumb } alt={ meal.strMeal } />\n              </div>\n            </div>\n          ))}\n        </div>\n        {!isDone && (\n          <Button\n            text={ isInProgress ? 'Continue Recipe' : 'Start Recipe' }\n            onClick={ () => startRecipe() }\n            testId=\"start-recipe-btn\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DrinkDetails;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport ShareButton from '../../components/ShareButton';\nimport FavoriteButton from '../../components/FavoriteButton';\nimport BackButton from '../../components/BackButton';\nimport Button from '../../components/Button';\nimport IngredientCheckbox from '../../components/IngredientCheckbox';\n\nimport {\n  addRecipeIngredient,\n  removeRecipeIngredient,\n} from '../../redux/actions/inProgressRecipesActions';\n\nimport { setDoneRecipe } from '../../redux/actions/doneRecipesActions';\n\nimport getIngredients from '../../utils/getIngredients';\n\nimport { getRecipeById } from '../../services/recipesAPI';\n\nfunction DrinkProgress() {\n  const [drink, setDrink] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const progressInfo = useSelector(\n    ({ inProgressRecipes }) => inProgressRecipes.cocktails[id] || [],\n  );\n\n  useEffect(() => {\n    async function getDrink() {\n      const data = await getRecipeById('drinks', id);\n      setDrink(data);\n    }\n\n    getDrink();\n  }, [id]);\n\n  useEffect(() => {\n    setIngredients(getIngredients(drink));\n  }, [drink]);\n\n  function handleChange(ingredient, isChecked) {\n    if (!isChecked) {\n      dispatch(addRecipeIngredient(id, 'bebida', ingredient));\n    } else {\n      dispatch(removeRecipeIngredient(id, 'bebida', ingredient));\n    }\n  }\n\n  function handleClickBebidas() {\n    dispatch(setDoneRecipe(drink, 'Drink'));\n    history.push('/finished-recipes');\n  }\n\n  return (\n    <div className=\"recipe-details recipe-progress\">\n      <BackButton />\n      <img\n        className=\"recipe-image\"\n        data-testid=\"recipe-photo\"\n        src={ drink.strDrinkThumb }\n        alt={ drink.strDrink }\n      />\n\n      <div className=\"recipe-info\">\n        <div className=\"info-header\">\n          <div className=\"name-section\">\n            <h1 data-testid=\"recipe-title\">{drink.strDrink}</h1>\n            <p data-testid=\"recipe-category\">{drink.strAlcoholic}</p>\n          </div>\n          <div className=\"icons-section\">\n            <ShareButton type=\"drinks\" id={ id } testId=\"share-btn\" />\n            <FavoriteButton\n              recipe={ drink }\n              type=\"Drink\"\n              testId=\"favorite-btn\"\n            />\n          </div>\n        </div>\n\n        <div className=\"section-name\">Ingredients</div>\n\n        <div className=\"ingredients-section\">\n          {ingredients.map(({ ingredient, measure }, index) => {\n            const ingredientKey = `${ingredient} - ${measure}`;\n            const isChecked = progressInfo.includes(ingredientKey);\n\n            return (\n              <IngredientCheckbox\n                name=\"progress\"\n                key={ ingredientKey }\n                text={ ingredientKey }\n                isChecked={ isChecked }\n                onChange={ () => handleChange(ingredientKey, isChecked) }\n                index={ index }\n                testId=\"ingredient-step\"\n              />\n            );\n          })}\n        </div>\n\n        <div className=\"section-name\">Instructions</div>\n        <p className=\"instructions\" data-testid=\"instructions\">\n          {drink.strInstructions}\n        </p>\n\n        <Button\n          disabled={ progressInfo.length !== ingredients.length }\n          text=\"Finish Recipe\"\n          onClick={ () => handleClickBebidas() }\n          testId=\"finish-recipe-btn\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default DrinkProgress;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport RecipeCard from '../../components/RecipeCard';\nimport Loading from '../../components/Loading';\nimport CategoryFilters from '../../components/CategoryFilters';\n\nimport { fetchDrinksThunk } from '../../redux/actions/drinksActions';\n\nconst Drinks = () => {\n  const { filteredDrinks, isFetching, filterInfo } = useSelector(\n    ({ drinks }) => drinks,\n  );\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(fetchDrinksThunk());\n  }, [dispatch]);\n\n  if (filteredDrinks.length === 1 && filterInfo.type === 'query') {\n    const { idDrink } = filteredDrinks[0];\n    history.push(`/drinks/${idDrink}`);\n  }\n\n  return (\n    <>\n      <Header title=\"Drinks\" hasSearchBar />\n      <div className=\"recipes-content\">\n        <CategoryFilters type=\"drinks\" />\n        {isFetching ? (\n          <Loading />\n        ) : (\n          <div className=\"recipe-list\">\n            {filteredDrinks.map(\n              ({ idDrink, strDrinkThumb, strDrink }, index) => (\n                <RecipeCard\n                  key={ idDrink }\n                  id={ idDrink }\n                  thumb={ strDrinkThumb }\n                  name={ strDrink }\n                  index={ index }\n                />\n              ),\n            )}\n          </div>\n        )}\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default Drinks;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport Button from '../../components/Button';\n\nimport './style.css';\n\nconst Explore = () => {\n  const history = useHistory();\n\n  return (\n    <>\n      <Header title=\"Explore\" />\n      <div className=\"explore-content\">\n        <div className=\"bg-meal\">\n          <Button\n            text=\"Explore Meals\"\n            onClick={ () => history.push('/explore/meals') }\n            testId=\"explore-food\"\n          />\n        </div>\n        <div className=\"bg-drink\">\n          <Button\n            text=\"Explore Drinks\"\n            onClick={ () => history.push('/explore/drinks') }\n            testId=\"explore-drinks\"\n          />\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default Explore;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport Button from '../../components/Button';\n\nimport './style.css';\n\nfunction Profile() {\n  const [email, setEmail] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    const storageEmail = localStorage.getItem('user');\n\n    if (storageEmail) {\n      setEmail(JSON.parse(storageEmail).email);\n    }\n  }, []);\n\n  return (\n    <>\n      <Header title=\"Profile\" />\n      <div className=\"profile-content\">\n        <p data-testid=\"profile-email\">{email}</p>\n        <Button\n          text=\"Finished Recipes\"\n          onClick={ () => history.push('/finished-recipes') }\n          testId=\"profile-done-btn\"\n        />\n        <Button\n          text=\"Favorite Recipes\"\n          onClick={ () => history.push('/favorite-recipes') }\n          testId=\"profile-favorite-btn\"\n        />\n        <Button\n          text=\"Log out\"\n          onClick={ () => { localStorage.clear(); history.push('/'); } }\n          testId=\"profile-logout-btn\"\n        />\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport ShareButton from '../ShareButton';\n\nimport './style.css';\n\nconst DoneRecipeCard = ({ recipe, index }) => (\n  <div className=\"done-recipe-card\">\n    <div className=\"done-image-container\">\n      <Link to={ `/${recipe.type}s/${recipe.id}` }>\n        <img\n          style={ { width: '11em' } }\n          data-testid={ `${index}-horizontal-image` }\n          src={ recipe.image }\n          alt={ recipe.name }\n        />\n      </Link>\n    </div>\n    <div className=\"done-main-info\">\n      <div className=\"first-section\">\n        <p\n          className=\"done-category\"\n          data-testid={ `${index}-horizontal-top-text` }\n        >\n          {recipe.type === 'meal'\n            ? `${recipe.area} - ${recipe.category}`\n            : recipe.alcoholicOrNot}\n        </p>\n        <ShareButton\n          type={ `${recipe.type}s` }\n          id={ recipe.id }\n          testId={ `${index}-horizontal-share-btn` }\n        />\n      </div>\n      <div className=\"second-section\">\n        <Link to={ `/${recipe.type}s/${recipe.id}` } className=\"done-recipe-name\">\n          <p data-testid={ `${index}-horizontal-name` }>{recipe.name}</p>\n        </Link>\n        <p\n          className=\"done-recipe-date\"\n          data-testid={ `${index}-horizontal-done-date` }\n        >\n          {`finished at: ${recipe.doneDate}`}\n        </p>\n      </div>\n      <div className=\"tag-section\">\n        {recipe.tags.map((tag) => (\n          <span\n            className=\"done-recipe-tag\"\n            key={ tag }\n            data-testid={ `${index}-${tag}-horizontal-tag` }\n          >\n            {tag}\n          </span>\n        ))}\n      </div>\n    </div>\n  </div>\n);\nDoneRecipeCard.propTypes = {\n  recipe: PropTypes.objectOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  ).isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default DoneRecipeCard;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Header from '../../components/Header';\nimport DoneRecipeCard from '../../components/DoneRecipeCard';\nimport CategoryButton from '../../components/CategoryButton';\n\nimport './style.css';\n\nconst filterTable = {\n  All: '',\n  Food: 'meal',\n  Drinks: 'drink',\n};\n\nconst FinishedRecipes = () => {\n  const { doneRecipes } = useSelector((state) => state);\n\n  const [filteredRecipes, setFilteredRecipes] = useState(doneRecipes);\n  const [filter, setFilter] = useState('All');\n\n  useEffect(() => {\n    if (filterTable[filter] === '') {\n      setFilteredRecipes(doneRecipes);\n    } else {\n      setFilteredRecipes(\n        doneRecipes.filter((recipe) => recipe.type === filterTable[filter]),\n      );\n    }\n  }, [filter, doneRecipes]);\n\n  return (\n    <>\n      <Header title=\"Finished Recipes\" />\n      <div className=\"finished-recipes\">\n        <div className=\"filter-section\">\n          <CategoryButton\n            category=\"All\"\n            handleFilterClick={ (category) => {\n              setFilter(category);\n            } }\n            testId=\"filter-by-all-btn\"\n            activeFilter={ filter }\n          />\n          <CategoryButton\n            category=\"Food\"\n            handleFilterClick={ (category) => {\n              setFilter(category);\n            } }\n            testId=\"filter-by-food-btn\"\n            activeFilter={ filter }\n          />\n          <CategoryButton\n            category=\"Drinks\"\n            handleFilterClick={ (category) => {\n              setFilter(category);\n            } }\n            testId=\"filter-by-drink-btn\"\n            activeFilter={ filter }\n          />\n        </div>\n        {filteredRecipes\n          && filteredRecipes.map((recipe, index) => (\n            <DoneRecipeCard key={ index } recipe={ recipe } index={ index } />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default FinishedRecipes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport FavoriteButton from '../FavoriteButton';\nimport ShareButton from '../ShareButton';\n\nimport './style.css';\n\nconst FavoriteRecipeCard = ({ recipe, index }) => (\n  <div className=\"done-recipe-card\">\n    <div className=\"done-image-container\">\n      <Link to={ `/${recipe.type}s/${recipe.id}` }>\n        <img\n          data-testid={ `${index}-horizontal-image` }\n          src={ recipe.image }\n          alt={ recipe.name }\n          style={ { width: '10em' } }\n        />\n      </Link>\n    </div>\n\n    <div className=\"favorite-main-info\">\n      <div className=\"first-section\">\n        <p\n          className=\"done-category\"\n          data-testid={ `${index}-horizontal-top-text` }\n        >\n          {recipe.type === 'meal'\n            ? `${recipe.area} - ${recipe.category}`\n            : recipe.alcoholicOrNot}\n        </p>\n      </div>\n\n      <Link to={ `/${recipe.type}s/${recipe.id}` } className=\"done-recipe-name\">\n        <p data-testid={ `${index}-horizontal-name` }>{recipe.name}</p>\n      </Link>\n\n      <div className=\"buttons-section\">\n        <ShareButton\n          type={ `${recipe.type}s` }\n          id={ recipe.id }\n          testId={ `${index}-horizontal-share-btn` }\n        />\n        <FavoriteButton\n          recipe={ recipe }\n          type={ recipe.type }\n          testId={ `${index}-horizontal-favorite-btn` }\n        />\n      </div>\n    </div>\n  </div>\n);\n\nFavoriteRecipeCard.propTypes = {\n  recipe: PropTypes.shape({\n    alcoholicOrNot: PropTypes.string,\n    area: PropTypes.string,\n    category: PropTypes.string,\n    id: PropTypes.string,\n    image: PropTypes.string,\n    name: PropTypes.string,\n    type: PropTypes.string,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default FavoriteRecipeCard;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Header from '../../components/Header';\nimport CategoryButton from '../../components/CategoryButton';\nimport FavoriteRecipeCard from '../../components/FavoriteRecipeCard';\n\nconst filterTable = {\n  All: '',\n  Food: 'meal',\n  Drinks: 'drink',\n};\n\nconst FavoriteRecipes = () => {\n  const { favoriteRecipes } = useSelector((state) => state);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [filter, setFilter] = useState('All');\n\n  useEffect(() => {\n    if (filterTable[filter]) {\n      setFilteredRecipes(\n        favoriteRecipes.filter((recipe) => recipe.type === filterTable[filter]),\n      );\n    } else {\n      setFilteredRecipes(favoriteRecipes);\n    }\n  }, [favoriteRecipes, filter]);\n\n  return (\n    <>\n      <Header title=\"Favorite Recipes\" />\n      <div className=\"finished-recipes\">\n        <div className=\"filter-section\">\n          <CategoryButton\n            category=\"All\"\n            handleFilterClick={ (category) => {\n              setFilter(category);\n            } }\n            testId=\"filter-by-all-btn\"\n            activeFilter={ filter }\n          />\n          <CategoryButton\n            category=\"Food\"\n            handleFilterClick={ (category) => {\n              setFilter(category);\n            } }\n            testId=\"filter-by-food-btn\"\n            activeFilter={ filter }\n          />\n          <CategoryButton\n            category=\"Drinks\"\n            handleFilterClick={ (category) => {\n              setFilter(category);\n            } }\n            testId=\"filter-by-drink-btn\"\n            activeFilter={ filter }\n          />\n        </div>\n\n        {filteredRecipes.map((recipe, index) => (\n          <FavoriteRecipeCard key={ recipe.id } recipe={ recipe } index={ index } />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default FavoriteRecipes;\n","import React from 'react';\n\nconst NotFound = () => <div>Not Found</div>;\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Login from './pages/Login';\nimport MealProgress from './pages/MealProgress';\nimport MealDetails from './pages/MealDetails';\nimport Meals from './pages/Meals';\nimport DrinkDetails from './pages/DrinkDetails';\nimport DrinkProgress from './pages/DrinkProgress';\nimport Drinks from './pages/Drinks';\nimport Explore from './pages/Explore';\nimport MealIngredients from './pages/MealIngredients';\nimport MealAreas from './pages/MealAreas';\nimport ExploreMeals from './pages/ExploreMeals';\nimport DrinkIngredients from './pages/DrinkIngredients';\nimport ExploreDrinks from './pages/ExploreDrinks';\nimport Profile from './pages/Profile';\nimport FinishedRecipes from './pages/FinishedRecipes';\nimport FavoriteRecipes from './pages/FavoriteRecipes';\nimport NotFound from './pages/NotFound';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route path=\"/meals/:id/in-progress\" component={ MealProgress } />\n        <Route\n          path=\"/meals/:id\"\n          render={ (props) => <MealDetails { ...props } /> }\n        />\n        <Route path=\"/meals\" component={ Meals } />\n        <Route path=\"/drinks/:id/in-progress\" component={ DrinkProgress } />\n        <Route\n          path=\"/drinks/:id\"\n          render={ (props) => <DrinkDetails { ...props } /> }\n        />\n        <Route path=\"/drinks\" component={ Drinks } />\n        <Route exact path=\"/explore\" component={ Explore } />\n        <Route\n          path=\"/explore/meals/ingredients\"\n          component={ MealIngredients }\n        />\n        <Route path=\"/explore/meals/area\" component={ MealAreas } />\n        <Route exact path=\"/explore/meals\" component={ ExploreMeals } />\n        <Route\n          path=\"/explore/drinks/ingredients\"\n          component={ DrinkIngredients }\n        />\n        <Route exact path=\"/explore/drinks\" component={ ExploreDrinks } />\n        <Route path=\"/profile\" component={ Profile } />\n        <Route path=\"/finished-recipes\" component={ FinishedRecipes } />\n        <Route path=\"/favorite-recipes\" component={ FavoriteRecipes } />\n        <Route component={ NotFound } />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import FAVORITE_RECIPES_ACTIONS from '../actions/favoriteRecipesActions';\n\nconst INITIAL_STATE = [];\n\nexport const getFavoriteRecipes = () => {\n  const favoriteRecipes = localStorage.getItem('favoriteRecipes');\n\n  return favoriteRecipes ? JSON.parse(favoriteRecipes) : INITIAL_STATE;\n};\n\nconst favoriteRecipesReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case FAVORITE_RECIPES_ACTIONS.ADD_FAVORITE_RECIPE:\n    return [...state, action.payload];\n  case FAVORITE_RECIPES_ACTIONS.REMOVE_FAVORITE_RECIPE:\n    return state.filter((recipe) => recipe.id !== action.payload);\n  default:\n    return state;\n  }\n};\n\nexport default favoriteRecipesReducer;\n","import IN_PROGRESS_RECIPES_ACTIONS from '../actions/inProgressRecipesActions';\n\nconst INITIAL_STATE = {\n  meals: {},\n  cocktails: {},\n};\n\nexport const getInProgressRecipes = () => {\n  const inProgressRecipes = localStorage.getItem('inProgressRecipes');\n\n  return inProgressRecipes ? JSON.parse(inProgressRecipes) : INITIAL_STATE;\n};\n\nconst inProgressRecipesReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case IN_PROGRESS_RECIPES_ACTIONS.SET_IN_PROGRESS_MEAL:\n    return {\n      ...state,\n      meals: {\n        ...state.meals,\n        ...action.payload,\n      },\n    };\n  case IN_PROGRESS_RECIPES_ACTIONS.SET_IN_PROGRESS_COCKTAIL:\n    return {\n      ...state,\n      cocktails: {\n        ...state.cocktails,\n        ...action.payload,\n      },\n    };\n  case IN_PROGRESS_RECIPES_ACTIONS.REMOVE_IN_PROGRESS_MEAL:\n    return {\n      ...state,\n      meals: {\n        ...state.meals,\n        [action.payload]: [],\n      },\n    };\n  case IN_PROGRESS_RECIPES_ACTIONS.REMOVE_IN_PROGRESS_COCKTAIL:\n    return {\n      ...state,\n      cocktails: {\n        ...state.cocktails,\n        [action.payload]: [],\n      },\n    };\n  default:\n    return state;\n  }\n};\n\nexport default inProgressRecipesReducer;\n","import DONE_RECIPES_ACTIONS from '../actions/doneRecipesActions';\n\nconst INITIAL_STATE = [];\n\nexport const getDoneRecipes = () => {\n  const doneRecipes = localStorage.getItem('doneRecipes');\n\n  return doneRecipes ? JSON.parse(doneRecipes) : INITIAL_STATE;\n};\n\nconst doneRecipesReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case DONE_RECIPES_ACTIONS.ADD_DONE_RECIPE:\n    return [...state, action.payload];\n  default:\n    return state;\n  }\n};\n\nexport default doneRecipesReducer;\n","import DRINKS_ACTIONS from '../actions/drinksActions';\n\nconst INITIAL_STATE = {\n  drinkList: [],\n  filteredDrinks: [],\n  categories: [],\n  filterInfo: {\n    term: '',\n    type: '',\n  },\n  isFetching: true,\n  error: '',\n};\n\nconst drinksReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case DRINKS_ACTIONS.SET_DRINKS:\n    return {\n      ...state,\n      isFetching: false,\n      error: '',\n      drinkList: action.payload,\n    };\n  case DRINKS_ACTIONS.SET_FILTERED_DRINKS:\n    return {\n      ...state,\n      isFetching: false,\n      error: '',\n      filteredDrinks: action.payload.drinks,\n      filterInfo: action.payload.filterInfo,\n    };\n  case DRINKS_ACTIONS.SET_DRINK_CATEGORIES:\n    return {\n      ...state,\n      isFetching: false,\n      error: '',\n      categories: action.payload,\n    };\n  case DRINKS_ACTIONS.REQUEST_DRINKS_API:\n    return { ...state, isFetching: true };\n  case DRINKS_ACTIONS.FAILED_DRINKS_REQUEST:\n    return { ...state, isFetching: false, error: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default drinksReducer;\n","import MEALS_ACTIONS from '../actions/mealsActions';\n\nconst INITIAL_STATE = {\n  mealList: [],\n  filteredMeals: [],\n  categories: [],\n  filterInfo: {\n    term: '',\n    type: '',\n  },\n  isFetching: true,\n  error: '',\n};\n\nconst mealsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case MEALS_ACTIONS.SET_MEALS:\n    return {\n      ...state,\n      isFetching: false,\n      error: '',\n      mealList: action.payload,\n    };\n  case MEALS_ACTIONS.SET_FILTERED_MEALS:\n    return {\n      ...state,\n      isFetching: false,\n      error: '',\n      filteredMeals: action.payload.meals,\n      filterInfo: action.payload.filterInfo,\n    };\n  case MEALS_ACTIONS.SET_MEAL_CATEGORIES:\n    return {\n      ...state,\n      isFetching: false,\n      error: '',\n      categories: action.payload,\n    };\n  case MEALS_ACTIONS.REQUEST_MEALS_API:\n    return { ...state, isFetching: true };\n  case MEALS_ACTIONS.FAILED_MEALS_REQUEST:\n    return { ...state, isFetching: false, error: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default mealsReducer;\n","import { combineReducers } from 'redux';\n\nimport drinksReducer from './drinksReducer';\nimport mealsReducer from './mealsReducer';\nimport favoriteRecipesReducer from './favoriteRecipesReducer';\nimport inProgressRecipesReducer from './inProgressRecipesReducer';\nimport doneRecipesReducer from './doneRecipesReducer';\n\nconst rootReducer = combineReducers({\n  meals: mealsReducer,\n  drinks: drinksReducer,\n  favoriteRecipes: favoriteRecipesReducer,\n  inProgressRecipes: inProgressRecipesReducer,\n  doneRecipes: doneRecipesReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport { loadState, saveState } from '../../utils/localStorageRedux';\n\nimport rootReducer from '../reducers';\n\nconst initialStoreState = loadState();\n\nconst store = createStore(\n  rootReducer,\n  initialStoreState,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport default store;\n","import { getFavoriteRecipes } from '../redux/reducers/favoriteRecipesReducer';\nimport { getInProgressRecipes } from '../redux/reducers/inProgressRecipesReducer';\nimport { getDoneRecipes } from '../redux/reducers/doneRecipesReducer';\n\nexport const loadState = () => {\n  const favoriteRecipes = getFavoriteRecipes();\n  const inProgressRecipes = getInProgressRecipes();\n  const doneRecipes = getDoneRecipes();\n\n  return {\n    favoriteRecipes,\n    inProgressRecipes,\n    doneRecipes,\n  };\n};\n\nexport const saveState = (state) => {\n  localStorage.setItem('favoriteRecipes', JSON.stringify(state.favoriteRecipes));\n  localStorage.setItem('inProgressRecipes', JSON.stringify(state.inProgressRecipes));\n  localStorage.setItem('doneRecipes', JSON.stringify(state.doneRecipes));\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}