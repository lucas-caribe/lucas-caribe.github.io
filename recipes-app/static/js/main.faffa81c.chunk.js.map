{"version":3,"sources":["components/SearchBar/index.js","components/CategoryItem/index.js","services/api.js","components/CategoryList/index.js","components/CartLink/index.js","utils/localStorageHelpers.js","components/Product/index.js","components/ProductList/index.js","pages/Home.js","components/CartItem/index.js","components/HomeIcon/index.js","pages/Cart/index.js","components/EvaluatingForm/index.js","components/Evaluation/index.js","components/EvaluationsZone/index.js","pages/ProductDetails/index.js","components/PurchaseForm/index.js","components/PurchaseScreenItem/index.js","pages/PurchaseScreen/index.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","handleClick","event","preventDefault","props","searchTerm","onClick","this","onChange","className","type","value","data-testid","React","Component","CategoryItem","categoryName","categoryId","selectedCategory","isSelected","htmlFor","id","name","checked","baseURL","getCategories","a","fetch","response","json","getProductsFromCategoryAndQuery","query","CategoryList","fetchCategories","api","data","setState","categories","state","map","key","CartLink","itemCount","to","getItemsFromLocalStorage","items","localStorage","getItem","JSON","parse","getItemFromLocalStorage","item","saveItemToLocalStorage","setItem","stringify","Product","checkCart","product","isAtCart","some","updateItemCount","newItems","amount","handleProductClick","history","push","handleProductKeyDown","keyCode","onKeyDown","role","tabIndex","src","thumbnail","alt","title","price","freeShipping","ProductList","reduce","acc","productList","length","Home","handleSearchTermChange","target","handleCategoryChange","listProducts","category","list","results","attributes","availableQuantity","available_quantity","shipping","free_shipping","CartItem","getNewQuantity","action","updateItemAmount","quantity","dataset","newQuantity","removeItemFromCart","data-action","HomeIcon","Cart","fetchProducts","cartItems","getTotalPrice","totalPrice","curr","fixedTotalPrice","Number","toFixed","filter","itemId","element","EvaluatingForm","addEvaluation","rating","comment","user","handleChange","handleStarChange","placeholder","starRatedColor","starHoverColor","changeRating","numberOfStars","starDimension","starSpacing","Evaluation","console","log","EvaluationsZone","evaluations","index","ProductDetails","evaluation","prevState","getEvaluationsById","filteredEvaluations","getProductFromLocalStorage","savedProduct","loading","attribute","value_name","PurchaseForm","email","cpf","phone","postalCode","adress","required","PurchaseScreenItem","width","PurchaseScreen","fixedPrice","purchaseFinished","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.faffa81c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FaSearch } from 'react-icons/fa';\n\nimport './style.css';\n\nclass SearchBar extends React.Component {\n  handleClick = (event) => {\n    event.preventDefault();\n    const { searchTerm, onClick } = this.props;\n\n    onClick('', searchTerm);\n  }\n\n  render() {\n    const { searchTerm, onChange } = this.props;\n\n    return (\n      <form className=\"search-form\">\n        <input\n          className=\"search-input\"\n          type=\"text\"\n          value={ searchTerm }\n          onChange={ onChange }\n          data-testid=\"query-input\"\n        />\n        <button\n          className=\"search-button\"\n          type=\"submit\"\n          onClick={ this.handleClick }\n          data-testid=\"query-button\"\n        >\n          <FaSearch />\n        </button>\n      </form>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  searchTerm: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nclass CategoryItem extends React.Component {\n  render() {\n    const { categoryName, categoryId, selectedCategory, onChange } = this.props;\n    const isSelected = selectedCategory === categoryId;\n\n    return (\n      <li>\n        <label\n          className={ isSelected ? 'filter-item selected' : 'filter-item' }\n          htmlFor={ categoryId }\n          data-testid=\"category\"\n        >\n          <input\n            className=\"item-selector\"\n            id={ categoryId }\n            type=\"radio\"\n            name=\"category\"\n            value={ categoryId }\n            checked={ isSelected }\n            onChange={ onChange }\n          />\n          {categoryName}\n        </label>\n      </li>\n    );\n  }\n}\n\nCategoryItem.propTypes = {\n  categoryName: PropTypes.string.isRequired,\n  categoryId: PropTypes.string.isRequired,\n  selectedCategory: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default CategoryItem;\n","const baseURL = 'https://api.mercadolibre.com/sites/MLB';\n\nexport async function getCategories() {\n  const response = await fetch(`${baseURL}/categories`);\n\n  return response.json();\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const response = await fetch(`${baseURL}/search?category=${categoryId}&q=${query}`);\n\n  return response.json();\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CategoryItem from '../CategoryItem';\n\nimport * as api from '../../services/api';\n\nimport './style.css';\n\nclass CategoryList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categories: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCategories();\n  }\n\n  fetchCategories = async () => {\n    const data = await api.getCategories();\n\n    if (data) this.setState({ categories: data });\n  };\n\n  render() {\n    const { categories } = this.state;\n    const { selectedCategory, onChange } = this.props;\n\n    return (\n      <div className=\"sidebar\">\n        <ul className=\"filter\">\n          {categories.map(({ id, name }) => (\n            <CategoryItem\n              key={ id }\n              categoryName={ name }\n              categoryId={ id }\n              selectedCategory={ selectedCategory }\n              onChange={ onChange }\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nCategoryList.propTypes = {\n  selectedCategory: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default CategoryList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { AiOutlineShoppingCart } from 'react-icons/ai';\n\nimport './style.css';\n\nclass CartLink extends React.Component {\n  render() {\n    const { itemCount } = this.props;\n\n    return (\n      <Link\n        key={ itemCount }\n        className=\"cart-link\"\n        to=\"/cart\"\n        data-testid=\"shopping-cart-button\"\n      >\n        <AiOutlineShoppingCart />\n        <span data-testid=\"shopping-cart-size\">{itemCount}</span>\n      </Link>\n    );\n  }\n}\n\nCartLink.propTypes = {\n  itemCount: PropTypes.number.isRequired,\n};\n\nexport default CartLink;\n","export const getItemsFromLocalStorage = (key) => {\n  const items = localStorage.getItem(key);\n\n  if (items) {\n    return JSON.parse(items);\n  }\n\n  return [];\n};\n\nexport const getItemFromLocalStorage = (key) => {\n  const item = localStorage.getItem(key);\n\n  if (item) {\n    return JSON.parse(item);\n  }\n\n  return {};\n};\n\nexport const saveItemToLocalStorage = (key, item) => {\n  localStorage.setItem(key, JSON.stringify(item));\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FaShippingFast } from 'react-icons/fa';\nimport { AiOutlineShoppingCart } from 'react-icons/ai';\n\nimport {\n  getItemsFromLocalStorage,\n  saveItemToLocalStorage,\n} from '../../utils/localStorageHelpers';\n\nimport './style.css';\n\nclass Product extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isAtCart: false,\n    };\n  }\n\n  componentDidMount() {\n    this.checkCart();\n  }\n\n  checkCart = () => {\n    const items = getItemsFromLocalStorage('cartItems');\n    const { product } = this.props;\n\n    this.setState({\n      isAtCart: items.some((item) => item.id === product.id),\n    });\n  };\n\n  handleClick = () => {\n    const { isAtCart } = this.state;\n    const { product, updateItemCount } = this.props;\n\n    const items = getItemsFromLocalStorage('cartItems');\n\n    if (!isAtCart) {\n      const newItems = [...items, { ...product, amount: 1 }];\n\n      this.setState({ isAtCart: true });\n      saveItemToLocalStorage('cartItems', newItems);\n      updateItemCount();\n    } else {\n      const newItems = items.map((item) => {\n        if (item.id === product.id) {\n          return { ...item, amount: item.amount + 1 };\n        }\n        return item;\n      });\n\n      saveItemToLocalStorage('cartItems', newItems);\n      updateItemCount();\n    }\n  };\n\n  handleProductClick = () => {\n    const { product, history } = this.props;\n\n    saveItemToLocalStorage('productDetails', product);\n\n    history.push(`/product/${product.id}`);\n  };\n\n  handleProductKeyDown = (event) => {\n    const ENTER_CODE = 13;\n\n    if (event.keyCode === ENTER_CODE) {\n      this.handleProductClick();\n    }\n  };\n\n  render() {\n    const { isAtCart } = this.state;\n    const { product } = this.props;\n\n    return (\n      <div className=\"product-card\" data-testid=\"product\" key={ product.id }>\n        <div\n          className=\"product-info\"\n          data-testid=\"product-detail-link\"\n          onClick={ this.handleProductClick }\n          onKeyDown={ this.handleProductKeyDown }\n          role=\"link\"\n          tabIndex={ 0 }\n        >\n          <div className=\"image-container\">\n            <img\n              className=\"product-image\"\n              src={ product.thumbnail }\n              alt={ `imagem de ${product.title}` }\n            />\n          </div>\n          <p>{product.title}</p>\n          <p>\n            R$\n            {' '}\n            {product.price}\n          </p>\n        </div>\n        <button\n          className=\"cart-button\"\n          type=\"button\"\n          data-testid=\"product-add-to-cart\"\n          onClick={ this.handleClick }\n        >\n          ADICIONAR AO CARRINHO\n        </button>\n        {product.freeShipping && (\n          <div className=\"free-shipping\">\n            <FaShippingFast className=\"shipping-icon\" />\n            <p data-testid=\"free-shipping\">FRETE GRÁTIS</p>\n          </div>\n        )}\n        {isAtCart && (\n          <div className=\"at-cart\">\n            <AiOutlineShoppingCart className=\"at-cart-icon\" />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nProduct.propTypes = {\n  product: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    freeShipping: PropTypes.bool.isRequired,\n  }).isRequired,\n  updateItemCount: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Product;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CartLink from '../CartLink';\nimport Product from '../Product';\n\nimport { getItemsFromLocalStorage } from '../../utils/localStorageHelpers';\n\nimport './style.css';\n\nclass ProductList extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      itemCount: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.updateItemCount();\n  }\n\n  updateItemCount = () => {\n    const items = getItemsFromLocalStorage('cartItems');\n\n    const itemCount = items.reduce((acc, { amount }) => acc + amount, 0);\n\n    this.setState({ itemCount });\n  };\n\n  render() {\n    const { itemCount } = this.state;\n    const { productList, history } = this.props;\n\n    if (!productList.length) {\n      return (\n        <div>\n          <p data-testid=\"home-initial-message\">\n            Digite algum termo de pesquisa ou escolha uma categoria.\n          </p>\n          <CartLink itemCount={ itemCount } />\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <CartLink itemCount={ itemCount } />\n        <div className=\"products\">\n          {productList.map((product) => (\n            <Product\n              key={ product.id }\n              history={ history }\n              product={ product }\n              updateItemCount={ this.updateItemCount }\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nProductList.propTypes = {\n  productList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default ProductList;\n","import React from 'react';\n\nimport SearchBar from '../components/SearchBar';\nimport CategoryList from '../components/CategoryList';\nimport ProductList from '../components/ProductList';\n\nimport * as api from '../services/api';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      productList: [],\n      searchTerm: '',\n      selectedCategory: '',\n    };\n  }\n\n  handleSearchTermChange = ({ target }) => {\n    this.setState({\n      searchTerm: target.value,\n    });\n  };\n\n  handleCategoryChange = ({ target }) => {\n    if (target.value) {\n      this.listProducts(target.value, '');\n    }\n\n    this.setState({\n      selectedCategory: target.value,\n    });\n  };\n\n  listProducts = async (category, query) => {\n    const response = await api.getProductsFromCategoryAndQuery(category, query);\n\n    const list = response.results.map((product) => ({\n      id: product.id,\n      title: product.title,\n      thumbnail: product.thumbnail,\n      price: product.price,\n      attributes: product.attributes,\n      availableQuantity: product.available_quantity,\n      freeShipping: product.shipping.free_shipping,\n    }));\n\n    this.setState({\n      productList: list,\n    });\n  };\n\n  render() {\n    const { searchTerm, productList, selectedCategory } = this.state;\n\n    return (\n      <div className=\"home-page\">\n        <CategoryList\n          selectedCategory={ selectedCategory }\n          onChange={ this.handleCategoryChange }\n        />\n        <div className=\"main-content\">\n          <SearchBar\n            searchTerm={ searchTerm }\n            onChange={ this.handleSearchTermChange }\n            onClick={ this.listProducts }\n          />\n          <ProductList productList={ productList } { ...this.props } />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ImCross } from 'react-icons/im';\nimport { AiOutlinePlus, AiOutlineMinus } from 'react-icons/ai';\n\nimport './style.css';\n\nclass CartItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quantity: props.amount,\n    };\n  }\n\n  getNewQuantity = (state, action) => {\n    switch (action) {\n    case 'increment':\n      return state + 1;\n    case 'decrement':\n      return state - 1;\n    default:\n      return state;\n    }\n  };\n\n  handleClick = ({ target }) => {\n    const { availableQuantity, updateItemAmount, id } = this.props;\n    const { quantity } = this.state;\n    const {\n      dataset: { action },\n    } = target;\n\n    const newQuantity = this.getNewQuantity(quantity, action);\n\n    if (newQuantity > 0 && newQuantity <= availableQuantity) {\n      this.setState({ quantity: newQuantity });\n\n      updateItemAmount(newQuantity, id);\n    }\n  };\n\n  render() {\n    const { id, title, price, thumbnail, removeItemFromCart } = this.props;\n    const { quantity } = this.state;\n    return (\n      <div className=\"cart-item\">\n        <button\n          className=\"remove-item\"\n          type=\"button\"\n          onClick={ () => removeItemFromCart(id, quantity) }\n        >\n          <ImCross />\n        </button>\n        <img className=\"item-image\" src={ thumbnail } alt={ title } />\n        <p className=\"item-title\" data-testid=\"shopping-cart-product-name\">{title}</p>\n        <div className=\"quantity-container\">\n          <button\n            type=\"button\"\n            data-action=\"decrement\"\n            onClick={ this.handleClick }\n            data-testid=\"product-decrease-quantity\"\n          >\n            <AiOutlineMinus />\n          </button>\n          <p data-testid=\"shopping-cart-product-quantity\">{quantity}</p>\n          <button\n            type=\"button\"\n            data-action=\"increment\"\n            onClick={ this.handleClick }\n            data-testid=\"product-increase-quantity\"\n          >\n            <AiOutlinePlus />\n          </button>\n        </div>\n        <p className=\"item-price\">\n          R$\n          {' '}\n          {price}\n        </p>\n      </div>\n    );\n  }\n}\n\nCartItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired,\n  availableQuantity: PropTypes.number.isRequired,\n  removeItemFromCart: PropTypes.func.isRequired,\n  updateItemAmount: PropTypes.func.isRequired,\n};\n\nexport default CartItem;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AiOutlineHome } from 'react-icons/ai';\n\nimport './style.css';\n\nclass HomeIcon extends Component {\n  render() {\n    return (\n      <Link className=\"home-icon\" to=\"/\">\n        <AiOutlineHome />\n      </Link>\n    );\n  }\n}\n\nexport default HomeIcon;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CartItem from '../../components/CartItem';\nimport HomeIcon from '../../components/HomeIcon';\n\nimport {\n  getItemsFromLocalStorage,\n  saveItemToLocalStorage,\n} from '../../utils/localStorageHelpers';\n\nimport './style.css';\n\nclass Cart extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cartItems: [],\n      totalPrice: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchProducts();\n  }\n\n  fetchProducts = () => {\n    const cartItems = getItemsFromLocalStorage('cartItems');\n\n    this.setState({ cartItems });\n\n    this.getTotalPrice(cartItems);\n  };\n\n  getTotalPrice = (items) => {\n    const totalPrice = items.reduce(\n      (acc, curr) => acc + curr.price * curr.amount,\n      0,\n    );\n\n    const fixedTotalPrice = Number(totalPrice.toFixed(2));\n\n    this.setState({ totalPrice: fixedTotalPrice });\n    saveItemToLocalStorage('totalPrice', fixedTotalPrice);\n  };\n\n  removeItemFromCart = (id) => {\n    const { cartItems } = this.state;\n\n    const newItems = cartItems.filter((item) => item.id !== id);\n\n    this.setState({ cartItems: [...newItems] });\n\n    this.getTotalPrice(newItems);\n    saveItemToLocalStorage('cartItems', newItems);\n  };\n\n  updateItemAmount = (quantity, itemId) => {\n    const { cartItems } = this.state;\n\n    const newItems = cartItems.map((item) => {\n      if (item.id === itemId) return { ...item, amount: quantity };\n      return item;\n    });\n\n    this.setState({ cartItems: [...newItems] });\n    this.getTotalPrice(newItems);\n    saveItemToLocalStorage('cartItems', newItems);\n  };\n\n  render() {\n    const { cartItems, totalPrice } = this.state;\n\n    return (\n      <div className=\"cart-content\">\n        <HomeIcon />\n        <div className=\"cart-items\">\n          {cartItems.length !== 0 ? (\n            cartItems.map((element) => (\n              <CartItem\n                key={ element.id }\n                id={ element.id }\n                title={ element.title }\n                price={ element.price }\n                thumbnail={ element.thumbnail }\n                amount={ element.amount }\n                availableQuantity={ element.availableQuantity }\n                removeItemFromCart={ this.removeItemFromCart }\n                updateItemAmount={ this.updateItemAmount }\n              />\n            ))\n          ) : (\n            <p data-testid=\"shopping-cart-empty-message\">\n              Seu carrinho está vazio\n            </p>\n          )}\n          <p className=\"total-price\">{`Total: R$ ${totalPrice}`}</p>\n          <Link\n            className=\"purchase\"\n            to=\"/purchase\"\n            data-testid=\"checkout-products\"\n          >\n            FINALIZAR COMPRA\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StarRatings from 'react-star-ratings';\n\nimport './style.css';\n\nclass EvaluatingForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      rating: 0,\n      comment: '',\n      user: '',\n    };\n  }\n\n  handleClick = (event, addEvaluation) => {\n    event.preventDefault();\n\n    const { id } = this.props;\n\n    addEvaluation({ ...this.state, id });\n\n    this.setState({\n      rating: 0,\n      comment: '',\n      user: '',\n    });\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleStarChange = (rating) => {\n    this.setState({\n      rating,\n    });\n  };\n\n  render() {\n    const { rating, comment, user } = this.state;\n    const { addEvaluation } = this.props;\n\n    return (\n      <div className=\"evaluation-section\">\n        <h1>Avaliações</h1>\n        <form className=\"evaluation-form\">\n          <div className=\"email-rating\">\n            <input\n              id=\"user\"\n              name=\"user\"\n              type=\"text\"\n              value={ user }\n              onChange={ this.handleChange }\n              placeholder=\"Email\"\n            />\n\n            <StarRatings\n              rating={ rating }\n              starRatedColor=\"rgb(255, 194, 25)\"\n              starHoverColor=\"rgb(255, 194, 25)\"\n              changeRating={ this.handleStarChange }\n              numberOfStars={ 5 }\n              name=\"rating\"\n              starDimension=\"2em\"\n              starSpacing=\"0.5em\"\n            />\n          </div>\n\n          <textarea\n            id=\"comment\"\n            name=\"comment\"\n            value={ comment }\n            onChange={ this.handleChange }\n            data-testid=\"product-detail-evaluation\"\n            placeholder=\"Comentários\"\n          />\n\n          <button\n            type=\"submit\"\n            onClick={ (event) => this.handleClick(event, addEvaluation) }\n          >\n            AVALIAR\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nEvaluatingForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  addEvaluation: PropTypes.func.isRequired,\n};\n\nexport default EvaluatingForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StarRatings from 'react-star-ratings';\n\nimport './style.css';\n\nclass Evaluation extends React.Component {\n  render() {\n    let { user, comment } = this.props;\n    const { rating } = this.props;\n    if (user === '') {\n      user = 'Anônimo';\n    }\n    if (comment === '') {\n      comment = 'Usuário não teceu comentários';\n    }\n\n    console.log(rating);\n    return (\n      <div className=\"evaluation\">\n        <div className=\"email-rating\">\n          <p className=\"email\">{ user }</p>\n          <StarRatings\n            rating={ Number(rating) }\n            starRatedColor=\"rgb(255, 194, 25)\"\n            starHoverColor=\"rgb(255, 194, 25)\"\n            numberOfStars={ 5 }\n            name=\"rating\"\n            starDimension=\"1.5em\"\n            starSpacing=\"0.5em\"\n          />\n        </div>\n        <p>{ comment }</p>\n      </div>\n    );\n  }\n}\n\nEvaluation.propTypes = {\n  user: PropTypes.string.isRequired,\n  comment: PropTypes.string.isRequired,\n  rating: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n\nexport default Evaluation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Evaluation from '../Evaluation';\n\nclass EvaluationsZone extends React.Component {\n  render() {\n    const { evaluations } = this.props;\n    return (\n      <div>\n        {evaluations.map((element, index) => (\n          <Evaluation\n            key={ index }\n            user={ element.user }\n            rating={ element.rating }\n            comment={ element.comment }\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nEvaluationsZone.propTypes = {\n  evaluations: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default EvaluationsZone;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CartLink from '../../components/CartLink';\nimport HomeIcon from '../../components/HomeIcon';\nimport EvaluatingForm from '../../components/EvaluatingForm';\nimport EvaluationsZone from '../../components/EvaluationsZone';\n\nimport {\n  getItemsFromLocalStorage,\n  getItemFromLocalStorage,\n  saveItemToLocalStorage,\n} from '../../utils/localStorageHelpers';\n\nimport './style.css';\n\nclass ProductDetails extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: true,\n      product: {},\n      itemCount: 0,\n      evaluations: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getProductFromLocalStorage();\n    this.updateItemCount();\n  }\n\n  addEvaluation = (evaluation) => {\n    const items = getItemsFromLocalStorage('evaluations');\n\n    const newItems = [...items, evaluation];\n\n    saveItemToLocalStorage('evaluations', newItems);\n\n    this.setState((prevState) => ({\n      evaluations: [...prevState.evaluations, evaluation],\n    }));\n  };\n\n  getEvaluationsById = (id) => {\n    const evaluations = getItemsFromLocalStorage('evaluations');\n\n    const filteredEvaluations = evaluations.filter(\n      (element) => element.id === id,\n    );\n\n    this.setState({\n      evaluations: filteredEvaluations,\n    });\n  };\n\n  updateItemCount = () => {\n    const items = getItemsFromLocalStorage('cartItems');\n\n    const itemCount = items.reduce((acc, { amount }) => acc + amount, 0);\n\n    this.setState({ itemCount });\n  };\n\n  getProductFromLocalStorage = () => {\n    const savedProduct = getItemFromLocalStorage('productDetails');\n\n    this.getEvaluationsById(savedProduct.id);\n\n    this.setState({ loading: false, product: savedProduct });\n  };\n\n  handleClick = () => {\n    const { product } = this.state;\n\n    const items = getItemsFromLocalStorage('cartItems');\n\n    if (!items.some((item) => item.id === product.id)) {\n      const newItems = [...items, { ...product, amount: 1 }];\n\n      saveItemToLocalStorage('cartItems', newItems);\n      this.updateItemCount();\n    }\n  };\n\n  render() {\n    const { loading, product, itemCount, evaluations } = this.state;\n\n    if (loading) {\n      return <p>Loading</p>;\n    }\n\n    return (\n      <>\n        <HomeIcon />\n        <CartLink itemCount={ itemCount } />\n        <div className=\"product-details\">\n          <h1 data-testid=\"product-detail-name\">{product.title}</h1>\n          <p className=\"product-price\">\n            R$\n            {' '}\n            {product.price}\n          </p>\n          <div className=\"product-main-info\">\n            <img src={ product.thumbnail } alt={ product.title } />\n            <div className=\"product-attributes\">\n              <h1>Especificações técnicas</h1>\n              {product.attributes.map((attribute) => (\n                <p key={ attribute.name }>\n                  {`${attribute.name}: `}\n                  <span>{attribute.value_name}</span>\n                </p>\n              ))}\n            </div>\n          </div>\n          <button\n            data-testid=\"product-detail-add-to-cart\"\n            type=\"button\"\n            onClick={ this.handleClick }\n          >\n            ADICIONAR AO CARRINHO\n          </button>\n          <EvaluatingForm id={ product.id } addEvaluation={ this.addEvaluation } />\n          <EvaluationsZone evaluations={ evaluations } />\n        </div>\n      </>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  match: PropTypes.shape({\n    isExact: PropTypes.bool.isRequired,\n    params: PropTypes.objectOf(PropTypes.string).isRequired,\n    path: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ProductDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nclass PurchaseForm extends React.Component {\n  render() {\n    const { name, email, cpf, phone, postalCode, adress, onClick, onChange } = this.props;\n    return (\n      <form className=\"purchase-form\">\n        <h3 className=\"customer-info-header\">Informações do comprador</h3>\n        <div className=\"customer-info\">\n          <input\n            required\n            name=\"name\"\n            type=\"text\"\n            data-testid=\"checkout-fullname\"\n            onChange={ onChange }\n            value={ name }\n            placeholder=\"Nome Completo\"\n            className=\"name\"\n          />\n\n          <input\n            required\n            name=\"cpf\"\n            type=\"text\"\n            data-testid=\"checkout-cpf\"\n            placeholder=\"CPF (apenas números)\"\n            onChange={ onChange }\n            value={ cpf }\n            className=\"cpf\"\n          />\n\n          <input\n            required\n            name=\"email\"\n            type=\"email\"\n            data-testid=\"checkout-email\"\n            onChange={ onChange }\n            value={ email }\n            placeholder=\"Email\"\n            className=\"email\"\n          />\n\n          <input\n            required\n            name=\"phone\"\n            type=\"text\"\n            data-testid=\"checkout-phone\"\n            onChange={ onChange }\n            value={ phone }\n            placeholder=\"Telefone\"\n            className=\"phone\"\n          />\n\n          <input\n            required\n            name=\"postalCode\"\n            type=\"text\"\n            data-testid=\"checkout-cep\"\n            onChange={ onChange }\n            value={ postalCode }\n            placeholder=\"CEP (apenas números)\"\n            className=\"cep\"\n          />\n\n          <input\n            required\n            name=\"adress\"\n            type=\"text\"\n            data-testid=\"checkout-address\"\n            onChange={ onChange }\n            value={ adress }\n            placeholder=\"Endereço\"\n            className=\"address\"\n          />\n        </div>\n        <button type=\"submit\" onClick={ onClick }>\n          Finalizar Compra\n        </button>\n      </form>\n    );\n  }\n}\n\nPurchaseForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  cpf: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  postalCode: PropTypes.string.isRequired,\n  adress: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default PurchaseForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nclass PurchaseScreenItem extends React.Component {\n  render() {\n    const { amount, price, thumbnail, title } = this.props;\n    return (\n      <div className=\"purchase-screen-item\">\n        <img src={ thumbnail } alt={ title } width=\"50px\" />\n        <p>{title}</p>\n        <p>{amount}</p>\n        <p>{`R$ ${price}`}</p>\n      </div>\n    );\n  }\n}\n\nPurchaseScreenItem.propTypes = {\n  amount: PropTypes.number.isRequired,\n  price: PropTypes.number.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default PurchaseScreenItem;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport PurchaseForm from '../../components/PurchaseForm';\nimport PurchaseScreenItem from '../../components/PurchaseScreenItem';\nimport HomeIcon from '../../components/HomeIcon';\n\nimport {\n  getItemFromLocalStorage,\n  getItemsFromLocalStorage,\n} from '../../utils/localStorageHelpers';\n\nimport './style.css';\n\nclass PurchaseScreen extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      items: [],\n      totalPrice: 0,\n      name: '',\n      email: '',\n      cpf: '',\n      phone: '',\n      postalCode: '',\n      adress: '',\n      purchaseFinished: false,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchProducts();\n  }\n\n  fetchProducts = () => {\n    const items = getItemsFromLocalStorage('cartItems');\n    const totalPrice = getItemFromLocalStorage('totalPrice');\n\n    const fixedPrice = Number(totalPrice.toFixed(2));\n\n    this.setState({\n      items,\n      totalPrice: fixedPrice,\n    });\n  };\n\n  handleClick = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      items: [],\n      name: '',\n      email: '',\n      cpf: '',\n      phone: '',\n      postalCode: '',\n      adress: '',\n      purchaseFinished: true,\n    });\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { items, totalPrice } = this.state;\n    const { name, email, cpf, phone, postalCode, adress, purchaseFinished } = this.state;\n    return (\n      <>\n        <HomeIcon />\n        <div className=\"purchase-screen\">\n          {purchaseFinished ? <Redirect to=\"/\" /> : null}\n          {items.map((element) => (\n            <PurchaseScreenItem\n              key={ element.title }\n              title={ element.title }\n              price={ element.price }\n              amount={ element.amount }\n              thumbnail={ element.thumbnail }\n            />\n          ))}\n          <p className=\"total-price\">{`Total: R$ ${totalPrice}`}</p>\n          <PurchaseForm\n            name={ name }\n            email={ email }\n            cpf={ cpf }\n            phone={ phone }\n            postalCode={ postalCode }\n            adress={ adress }\n            onClick={ this.handleClick }\n            onChange={ this.handleChange }\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default PurchaseScreen;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport { Home, Cart, ProductDetails, PurchaseScreen } from './pages';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/online-store\">\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={ Home } />\n          <Route exact path=\"/cart\" component={ Cart } />\n          <Route exact path=\"/product/:id\" component={ ProductDetails } />\n          <Route exact path=\"/purchase\" component={ PurchaseScreen } />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}