{"version":3,"sources":["components/Button/index.js","components/Input/index.js","utils/shuffleAnswers.js","utils/pickRandomQuestions.js","utils/uzboyQuestions.js","services/questionApi.js","redux/actions/index.js","redux/actions/questionActions.js","pages/Login/index.js","components/SelectInput/index.js","pages/Settings/index.js","redux/actions/gameActions.js","components/Answer/index.js","components/Timer/index.js","components/Question/index.js","components/Loading/index.js","pages/Game/index.js","pages/Feedback/index.js","components/RankingItem/index.js","pages/Ranking/index.js","serviceWorker.js","redux/reducers/authReducer.js","redux/reducers/questionsReducer.js","redux/reducers/gameReducer.js","redux/reducers/index.js","redux/store/store.js","index.js","App.js","assets/betterLogo.png","assets/rau.png","assets/pablao.jpeg","assets/gusta.jpeg"],"names":["Button","this","props","type","disabled","onClick","text","color","className","style","backgroundColor","visibility","Component","defaultProps","Input","placeholder","name","value","onChange","validation","aria-label","data-validation","pickRandomIndex","max","Math","floor","random","shuffleAnswers","incorrectAnswers","correctAnswer","answers","selectedAnswers","tempAnswers","i","length","randomIndex","pickedAnswer","push","isCorrect","decodeURIComponent","pickRandomQuestions","questions","amount","sort","slice","uzboyQuestions","category","difficulty","question","getToken","a","async","axios","data","token","getCategories","trivia_categories","difficulties","id","types","requestToken","setToken","payload","QUESTION_ACTIONS","REQUEST_API","FAILED_REQUEST","SET_QUESTIONS","GET_CATEGORIES","UZBOY_QUESTION_ACTIONS","requestApi","requestFailed","error","setQuestions","getCategoriesAction","categoryList","fetchCategoriesThunk","dispatch","message","Login","state","email","validName","handleChange","bind","handleClick","getGravatar","gravatarHash","MD5","toString","toLowerCase","trim","target","dataset","setState","event","fetch","history","setGravatarToState","setPlayerToState","preventDefault","window","localStorage","setItem","src","logo","alt","width","undefined","connect","auth","gravatar","setGravatar","setPlayerData","SelectInput","labelText","options","gridArea","htmlFor","map","optionId","key","Settings","getUserConfigs","configs","getItem","JSON","parse","stringify","GAME_ACTIONS","GUESS","NEXT_QUESTION","INCREASE_SCORE","SET_TIME","RESET_GAME","INCREASE_ASSERTIONS","setTime","time","resetGame","Answer","guess","checkAnswer","questionInfo","answer","guessed","timeOver","game","Timer","startTimer","clearInterval","interval","setInterval","countDown","setTimeOver","setTimeRedux","easy","medium","hard","Question","handleNextQuestion","nextQuestion","currentQuestion","totalQuestions","increaseGlobalScore","increaseAssertions","toFixed","shuffledAnswers","data-testid","index","rau","increaseScore","Loading","Game","fetchQuestions","isFetching","questionsArray","getState","console","log","resetGameAction","Feedback","handlePlayAgain","setPlayer","score","playersJSON","players","newPlayer","picture","assertions","pablao","gusta","trophyColors","RankingItem","player","Ranking","setPlayers","handleHomeClick","sortPlayers","localPlayersString","localPlayers","sortedPlayers","b","Boolean","location","hostname","match","INITIAL_STATE","isFetchingToken","authReducer","action","questionsReducer","gameReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Cypress","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7bd2677b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nclass Button extends Component {\n  render() {\n    const {\n      type,\n      disabled,\n      onClick,\n      text,\n      color,\n      className,\n      visibility,\n    } = this.props;\n\n    const style = {\n      backgroundColor: color,\n      visibility,\n    };\n\n    return (\n      <button\n        type={ type === 'submit' ? 'submit' : 'button' }\n        disabled={ disabled }\n        onClick={ onClick }\n        style={ style }\n        className={ `${className} game-button` }\n      >\n        {text}\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  visibility: PropTypes.string,\n};\n\nButton.defaultProps = {\n  className: '',\n  visibility: 'visible',\n  disabled: false,\n  color: '',\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AiOutlineUser, AiOutlineMail } from 'react-icons/ai';\n\nimport './style.css';\n\nclass Input extends Component {\n  render() {\n    const { placeholder, type, name, value, onChange, validation } = this.props;\n\n    return (\n      <div className=\"input-container\">\n        <div className=\"icon-section\">\n          {name === 'name' ? <AiOutlineUser /> : <AiOutlineMail />}\n        </div>\n        <div className=\"input-section\">\n          <input\n            className=\"game-input\"\n            aria-label={ placeholder }\n            placeholder={ placeholder }\n            type={ type }\n            name={ name }\n            value={ value }\n            onChange={ onChange }\n            data-validation={ validation }\n          />\n          <div className=\"outline\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  validation: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","const pickRandomIndex = (max) => Math.floor(Math.random() * max);\n\nconst shuffleAnswers = (incorrectAnswers, correctAnswer) => {\n  const answers = [...incorrectAnswers, correctAnswer];\n\n  const selectedAnswers = {};\n  const tempAnswers = [];\n\n  for (let i = 0; i < answers.length; i += 1) {\n    let randomIndex = pickRandomIndex(answers.length);\n\n    while (selectedAnswers[randomIndex]) {\n      randomIndex = pickRandomIndex(answers.length);\n    }\n\n    selectedAnswers[randomIndex] = true;\n\n    const pickedAnswer = answers[randomIndex];\n\n    tempAnswers.push({\n      isCorrect: pickedAnswer === correctAnswer,\n      text: decodeURIComponent(pickedAnswer),\n    });\n  }\n\n  return tempAnswers;\n};\n\nexport default shuffleAnswers;\n","const NSEI = 0.5;\n\nconst pickRandomQuestions = (questions, amount) => {\n  const randomQuestions = questions.sort(\n    () => Math.floor(Math.random() - NSEI),\n  );\n\n  return randomQuestions.slice(0, amount);\n};\n\nexport default pickRandomQuestions;\n","/* eslint-disable */\nimport shuffleAnswers from './shuffleAnswers';\n\nconst uzboyQuestions = [\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'easy',\n    question:\n      'Sabemos quem quebrou a árvore do Riodi, mas qual era a espécie dessa árvore?',\n    correctAnswer: 'Goiabeira',\n    incorrectAnswers: ['Jaboticabeira', 'Madeira', 'Mangueira'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'easy',\n    question:\n      'O símbolo do grupo é um saruê, mas como esse animal surgiu no folclore duzboy?',\n    correctAnswer: 'Invadiu a casa de Cq em um dia chuvoso',\n    incorrectAnswers: [\n      'Apareceu na roça do ramon',\n      'Mordeu Talita em uma festa na casa do riodi',\n      'É o animal de estimação de zenon, man',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'easy',\n    question: 'O que significa \"tigerzar\"?',\n    correctAnswer: 'Engajar em várias relações ao mesmo tempo',\n    incorrectAnswers: [\n      'Cobiçar a mulher do próximo',\n      'Ter um relacionamento extraconjugal',\n      'Ser homem, mas beijar na boca de um rapaz',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'medium',\n    question:\n      'Das pessoas que possuem a tatuagem do saruê, somente UMA tatuou no braço esquerdo, as outras tatuaram no braço direto. Quem é esse PETISTA?',\n    correctAnswer: 'RAMON',\n    incorrectAnswers: ['PABLE', 'CQ', 'LEU'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'medium',\n    question:\n      'Algumas pessoas que tatuaram o saruê, alguns anos depois se comprometeram a tatuar o Zeca pagodinho, entretanto, apenas DUAS pessoas cumpriram (ATÉ O MOMENTO). Quais foram?',\n    correctAnswer: 'Japa e Leo',\n    incorrectAnswers: ['Gusta e Cq', 'Cq e Japa', 'Leo e Gusta'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question:\n      'Em qual feriado nacional um rapaz deste grupo, que terá sua identidade preservada, foi detido após sofrer um acidente junto com Gusta, dirigindo supostamente sob efeito de álcool?',\n    correctAnswer: '07 de setembro',\n    incorrectAnswers: ['Carnaval', 'Revei on', '15 de novembro'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'medium',\n    question: 'Quantas vezes Cq perdeu/quebrou o celular?',\n    correctAnswer: '135 vezes',\n    incorrectAnswers: ['5 vezes', '2 vezes', '9 vezes'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'easy',\n    question:\n      'Qual música cantada por NOSSO MAIS QUERIDO FORA DA LEI na delegacia enquanto aguardava a lavratura do boletim de ocorrência?',\n    correctAnswer: 'Take Me Home, Country Roads (John Denver)',\n    incorrectAnswers: [\n      'Me solta, porra (Nego do Borel e Rennan da Penha)',\n      'Amor de que (Pablo Vittar)',\n      'Filha (Rick e Renner)',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'easy',\n    question:\n      'Complete a música: Tem como eu voltar pra você? Tem como eu voltar pra você? Volta comigo _______:',\n    correctAnswer: 'CQ',\n    incorrectAnswers: ['BEBÊ', 'PABLÊ', 'GISELÊ'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question:\n      'Em que ano foi feita a camisa com o escudo da CBF de cor azul e preta duzboy?',\n    correctAnswer: '2017',\n    incorrectAnswers: ['2015', '2016', '2018'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'medium',\n    question:\n      'Por que chupa cabra ficou quase 1 ano sem conversar com Cq? *obs: Meu Amigo Chupa S2*',\n    correctAnswer: 'Spoiler de Vingadores: Guerra Infinita',\n    incorrectAnswers: [\n      'Spoiler de Vingadores: Ultimato',\n      'Ofensas capilares',\n      'Spoiler de Game of Thrones',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'medium',\n    question: 'Quem é o criador do perfil no Instagram \"UzboyOficial\"',\n    correctAnswer: 'Pable',\n    incorrectAnswers: ['Gusta', 'Lúcia', 'Cq'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'easy',\n    question: 'Qual membro duzboy faz programa e se orgulha disso?',\n    correctAnswer: 'Cabaré',\n    incorrectAnswers: ['Ingão', 'Waena', 'Gatokin'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'easy',\n    question:\n      'Qual membro duzboy é conhecido por estar num lugar e \"sair à francesa\"?',\n    correctAnswer: 'Rau',\n    incorrectAnswers: ['Cabaré', 'Cq', 'Gusta'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'medium',\n    question:\n      'Após NOSSO FORA DA LEI PREFERIDO ser detido por SUPOSTAMENTE estar alcoolizado e recusar o bafômetro, por qual motivo ele foi liberado?',\n    correctAnswer: 'O exame apontou que ele não estava alcoolizado',\n    incorrectAnswers: [\n      'Pagou fiança',\n      'Cumpriu a pena',\n      'Serviços diversos prestados ao Sgto Waguin',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'easy',\n    question:\n      'Após um acidente automobilístico em um feriado, ao ser questionado pelo PM quem estava dirigindo o veículo, o que NOSSO FORA DA LEI PREFERIDO fez?',\n    correctAnswer:\n      'Jogou a chave do carro na mão de Cq, que nem estava no acidente na hora, e falou: ELE!',\n    incorrectAnswers: [\n      'Assumiu que era ele',\n      'Saiu correndo',\n      'Fingiu que estava zonzo por ter batido a cabeça e pediu uma ambulância.',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question:\n      'Na primeira vez que Pedrão proferiu a frase “OH ... TEM UM ... AQUI PRA VOCÊ!”, quem e qual objeto foram referidos?',\n    correctAnswer: 'TÚLLIO, TEM UM CHOCOLATÃO AQUI PRA VOCÊ!',\n    incorrectAnswers: [\n      'GUSTAVO, TEM UM LATÃOZÃO AQUI PRA VOCÊ!',\n      'LEO, TEM UM COROTÃO AQUI PRA VOCÊ!',\n      'JOÃO, TEM UM CACETÂO AQUI PRA VOCÊ!',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question:\n      'Segundo Rodriguinho, Brito havia levado mais de 100 pontos da facada no peito, que sofreu através de um atentado no carnaval em Diamantina. Posteriormente, tal informação foi desmentida. Diante desta informação, quantos pontos na verdade Brito levou?',\n    correctAnswer: '9 pontos',\n    incorrectAnswers: [\n      '16 pontos',\n      '3 pontos',\n      'Nenhum, a facada só pegou de raspão',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'medium',\n    question:\n      'Certa vez, em uma ocasião, Gusta chamou Pedrão de complexado. A resposta dele foi:',\n    correctAnswer: 'Tenho um complexo de rola grande, FELADAPUTA!',\n    incorrectAnswers: [\n      'Tenho um complexo de comer sua mãe, FELADAPUTA!',\n      'Tenho um complexo de comer cu de traveco, FELADAPUTA!',\n      'Tenho um complexão aqui pra você, FELADAPUTA!',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'medium',\n    question:\n      'Certa vez, em uma ocasião, Pedrão fez uma cirurgia para retirada das amigdalas. Ao comentar a cirurgia, ele disse que algo inusitado parecia ter passado por sua garganta. O que foi?',\n    correctAnswer: 'Rola de Fogo',\n    incorrectAnswers: [\n      'Porra efervescente',\n      'Pica em brasa',\n      'Cacete em chamas',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'easy',\n    question:\n      'Quem é o(a) sujeito(a) da famosa frase do Ramon? \"OH GUSTAVO, ... ESTÁ TE LIGANDO GUSTAVO, ATENDE O TELEFONE, GUSTAVO\"',\n    correctAnswer: 'CQ',\n    incorrectAnswers: ['SUA MÃE', 'CHUPA CABRA', 'PABLO'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question: 'Quem foi o primeiro a tatuar o saruê?',\n    correctAnswer: 'Cq',\n    incorrectAnswers: ['Gusta', 'Japa', 'Brito'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question: 'Beth, Gisele, Vera e Mônica, são respectivamente as mães de:',\n    correctAnswer: 'Fat, Pedrão, Pablo, e Chupa Cabra',\n    incorrectAnswers: [\n      'Pablo, Pedrão, Fat e Gusta',\n      'Pablo, Pedrão, Fat e Leu',\n      'Fat, Cabaré, Pedrão e Pablo',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'medium',\n    question: 'Qual dupla as mães são xarás?',\n    correctAnswer: 'Gusta e Ramon',\n    incorrectAnswers: [\n      'Gatokin e Chupa Cabra',\n      'Cabaré e Leo',\n      'Gatokin e Cabaré',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'easy',\n    question: 'Qual a mensagem de parabéns correta?',\n    correctAnswer:\n      'Parabéns, que todos os seus sonhos e objetivos se tornem reais. Bjs',\n    incorrectAnswers: [\n      'Parabéns, tudo de bom na sua vida. Bjs',\n      'Parabéns, que todos os seus sonhos e objetivos se tornem reais. Abração?',\n      'Parabéns, que todos os seus sonhos e objetivos se tornem reais. Abração, viu?',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question:\n      'Identifique o inimigo da pontualidade. Dica: Talvez ele ainda não chegou e se chegou foi um dos atrasados.',\n    correctAnswer: 'Todas as alternativas',\n    incorrectAnswers: ['Leu', 'Leu', 'Leu'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'easy',\n    question:\n      'Qual membro duzboy é famoso por saber a diferenciação dos porquês e empregá-los de maneira correta, bem como fazer correções ortográficas?',\n    correctAnswer: 'Cabaré*',\n    incorrectAnswers: ['Lúcia', 'Cabarre', 'Pablo'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'easy',\n    question:\n      'Além de derrubar a árvore, Pedrão, dessa vez sem querer, destruiu outro apetrecho da festa duzboy naquela mesma ocasião. O que foi?',\n    correctAnswer: 'O isopor de Riodi',\n    incorrectAnswers: [\n      'O som de Larissão',\n      'O celular de Pablo',\n      'A bicicleta de João, que teve que pedir uber pra ir embora',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question: 'Quem colocou o apelido em Lúcia de Tiger?',\n    correctAnswer: 'Cq',\n    incorrectAnswers: ['Gusta', 'Pable', 'Leo'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question:\n      'Um pedreiro carregava 4 galões: 01 de água, 01 de areia, um de brita e 01 de massa. Qual deles não aguentou?',\n    correctAnswer: 'O galão da massa',\n    incorrectAnswers: ['O da água', 'O da brita', 'O da areia'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'medium',\n    question:\n      'Esse ano tivemos a primeira tatuagem de sarua...? Saruê fêmea? Saruera? Saruerá? Enfim, quem foi a primeira senhorita a fazer o saruê molie?',\n    correctAnswer: 'Dona Maura',\n    incorrectAnswers: [\n      'Senhora Jesga',\n      'A dona da oficina',\n      'Thalitão Braulino',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question:\n      'Todos estamos familiarizados com os empreendimentos dos nossos amigos empresários. Contudo um deles se destaca pelo seu forte domínio na economia mundial e pelo lançamento do seu mundo virtual, o MOTOverso. De qual estabelecimento comercial estamos falando?',\n    correctAnswer: 'A Oficina',\n    incorrectAnswers: ['Clube da Cevada', 'Acarajesga', 'Da horta para casa'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question:\n      'Em um ano que eu não me lembro, um rapaz dentre as alternativas abaixo acabou o dia do aniversário de Gusta no hospital, em função da alta quantidade de álcool consumida. Quem foi o nosso bravo herói?',\n    correctAnswer: 'Cai',\n    incorrectAnswers: ['Leu', 'Pedrão', 'Rau'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question:\n      'Quem compareceu a uma fesduzboy poucos dias após a retirada das amigdalas em um determinado ano e se manteve firme, forte e com a boca inchada durante toda a festa?',\n    correctAnswer: 'Ramon',\n    incorrectAnswers: ['Pedrão', 'Leu', 'Lukinhas'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question:\n      'Dentre os cidadãos de bem abaixo, qual deles nunca se envolveu em uma trocação franca no ambiente escolar (a rua da escola é ambiente escolar para efeitos desta pergunta)?',\n    correctAnswer: 'Diego',\n    incorrectAnswers: ['Tuleo', 'Ramon', 'Rau'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question: 'Qual destes rapazinhos foi reconhecido como o mais sensato?',\n    correctAnswer: 'Cq',\n    incorrectAnswers: ['Gusta', 'Diego', 'Tuleo'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question:\n      'Qual destes senhores tem fezes na cabeça e tatuou o sarue na perna?',\n    correctAnswer: 'Diego',\n    incorrectAnswers: ['Diogo', 'Digo', 'Deigo'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'easy',\n    question: 'Quem é o homem mais bonito do planeta terra?',\n    correctAnswer: 'Pablão',\n    incorrectAnswers: ['Doroth', 'Brito', 'Cq'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question:\n      'Em um determinado dia, próximo ao fim da primeira década dos anos 2000, um pé torto feladaputa jogou a bola no teto da quadra da Unimontes. Um herói surgiu dentre nós e, bravamente, foi buscar a bola no teto da quadra. Um segundo herói, se armou com palavras e dialogou bravamente contra a opressão do sistema burocrático de Hermenegildo Geovanoni. Estes guerreiros são, respectivamente:',\n    correctAnswer: 'Cq e Japa',\n    incorrectAnswers: ['Lúcia e Cq', 'Lúcia e Gusta', 'Japa e Gusta'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question:\n      'Após um show do Asa de Aguia, nos primórdios dos anos 2000, alguns rapazes decidiram jogar sinuca após tomarem alguns goles de rum. Em um momento desconhecido, um deles se perdeu e foi salvo pela galera de preto (o preço dessa salvação ninguém sabe). Quem foi esse rapaz?',\n    correctAnswer: 'Leu',\n    incorrectAnswers: ['Cq', 'Lucia', 'Japa'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'medium',\n    question:\n      'Cq sempre conta o dia em que um cidadão virou um corote inteiro, enquanto ele buscava servir uma única e humilde dose. Quem foi esse brabo?',\n    correctAnswer: 'Cai',\n    incorrectAnswers: ['Leu', 'Pedrão', 'Rau'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question:\n      'No ano de 200X uma pessoa dentre as presentes neste recinto conseguiu a proeza de quebrar a cerca eletrica das quatro paredes da casa em que jogávamos futebol. Quem foi o perna de pau?',\n    correctAnswer: 'Gusta',\n    incorrectAnswers: ['Japa', 'Cq', 'Lucia'],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'easy',\n    question:\n      'Qual destes rapazes é conhecido pela sua ausência de coordenação motora que comumente resulta em quaisquer tipos de bagunça?',\n    correctAnswer: 'Japa',\n    incorrectAnswers: [\n      'Rodrigo',\n      'Rodrigo Hiramatsu Gomes Junior',\n      'Rodrigo Hiramatsu Gomes Mayrink Costa Junior',\n    ],\n  },\n  {\n    category: 'dá trabai organizar por categoria',\n    type: 'multiple',\n    difficulty: 'hard',\n    question:\n      'No dia de hoje, quem foi acusado injustamente pela sua esposa de enrolar enquanto, na verdade, dava o suor e o sangue pelo bem da confraternização?',\n    correctAnswer: 'Ramon',\n    incorrectAnswers: [\n      'Japa',\n      'Brito',\n      'Leu',\n    ],\n  },\n];\n\nexport default uzboyQuestions;\n\n// export function shuffle(array) {\n//   let currentIndex = array.length,\n//     randomIndex;\n\n//   // While there remain elements to shuffle...\n//   while (currentIndex != 0) {\n//     // Pick a remaining element...\n//     randomIndex = Math.floor(Math.random() * currentIndex);\n//     currentIndex--;\n\n//     // And swap it with the current element.\n//     [array[currentIndex], array[randomIndex]] = [\n//       array[randomIndex],\n//       array[currentIndex],\n//     ];\n//   }\n\n//   return array;\n// }\n// export const getUzboyQuestions = () => {\n//   const decodedResults = uzboyQuestions.map((questionInfo) => {\n//     const shuffledAnswers = shuffleAnswers(\n//       questionInfo.incorrectAnswers,\n//       questionInfo.correctAnswer,\n//     );\n\n//     return {\n//       question: decodeURIComponent(questionInfo.question),\n//       category: decodeURIComponent(questionInfo.category),\n//       correctAnswer: decodeURIComponent(questionInfo.correctAnswer),\n//       difficulty: questionInfo.difficulty,\n//       shuffledAnswers,\n//     };\n//   });\n\n//   return decodedResults;\n// };\n","import axios from 'axios';\n\nimport shuffleAnswers from '../utils/shuffleAnswers';\nimport pickRandomQuestions from '../utils/pickRandomQuestions';\nimport uzboyQuestions from '../utils/uzboyQuestions';\n\nconst TOKEN_ENDPOINT = 'https://opentdb.com/api_token.php?command=request';\n// const QUESTION_ENDPOINT = 'https://opentdb.com/api.php?amount=5';\nconst CATEGORY_ENDPOINT = 'https://opentdb.com/api_category.php';\nconst MAX_QUESTIONS = 5;\n\nexport const getToken = async () => {\n  const { data } = await axios(TOKEN_ENDPOINT);\n\n  return data.token;\n};\n\nexport const getCategories = async () => {\n  const { data } = await axios(CATEGORY_ENDPOINT);\n\n  return data.trivia_categories;\n};\n\nexport const getUserConfigs = () => {\n  const configs = localStorage.getItem('userConfigs');\n\n  if (configs) {\n    const parsedConfigs = JSON.parse(configs);\n\n    return parsedConfigs;\n  }\n\n  return {};\n};\n\n// export const getQuestions = async (token) => {\n//   const { category = '', difficulty = '', type = '' } = getUserConfigs();\n//   const options = `category=${category}&difficulty=${difficulty}&type=${type}`;\n\n//   let { data } = await axios(\n//     `${QUESTION_ENDPOINT}&token=${token}&encode=url3986&${options}`,\n//   );\n\n//   if (!data.results.length) {\n//     const response = await axios(\n//       `${QUESTION_ENDPOINT}&token=${token}&encode=url3986`,\n//     );\n\n//     data = response.data;\n//   }\n\n//   const decodedResults = data.results.map((questionInfo) => {\n//     const shuffledAnswers = shuffleAnswers(\n//       questionInfo.incorrect_answers,\n//       questionInfo.correct_answer,\n//     );\n\n//     return {\n//       question: decodeURIComponent(questionInfo.question),\n//       category: decodeURIComponent(questionInfo.category),\n//       correctAnswer: decodeURIComponent(questionInfo.correct_answer),\n//       difficulty: questionInfo.difficulty,\n//       shuffledAnswers,\n//     };\n//   });\n\n//   return decodedResults;\n// };\n\nexport const getQuestions = () => {\n  const questions = pickRandomQuestions(uzboyQuestions, MAX_QUESTIONS);\n\n  return questions.map((questionInfo) => {\n    const shuffledAnswers = shuffleAnswers(\n      questionInfo.incorrectAnswers,\n      questionInfo.correctAnswer,\n    );\n\n    return {\n      ...questionInfo,\n      shuffledAnswers,\n    };\n  });\n};\n\nexport const difficulties = [\n  {\n    name: 'Any',\n    id: '',\n  },\n  {\n    name: 'Easy',\n    id: 'easy',\n  },\n  {\n    name: 'Medium',\n    id: 'medium',\n  },\n  {\n    name: 'Hard',\n    id: 'hard',\n  },\n];\n\nexport const types = [\n  {\n    name: 'Both',\n    id: '',\n  },\n  {\n    name: 'Multiple Choice',\n    id: 'multiple',\n  },\n  {\n    name: 'True / False',\n    id: 'boolean',\n  },\n];\n","import { getToken } from '../../services/questionApi';\n\nexport const REQUEST_TOKEN = 'REQUEST_TOKEN';\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const SET_GRAVATAR = 'SET_GRAVATAR';\nexport const SET_PLAYER = 'SET_PLAYER';\n\nexport function requestToken() {\n  return ({ type: REQUEST_TOKEN });\n}\n\nexport function setToken(token) {\n  return ({ type: SET_TOKEN, payload: token });\n}\n\nexport function setGravatar(gravatar) {\n  return ({ type: SET_GRAVATAR, payload: gravatar });\n}\n\nexport function setPlayerData(name, email) {\n  return ({ type: SET_PLAYER, payload: { name, email } });\n}\n\nexport const fetchToken = () => async (dispatch) => {\n  dispatch(requestToken);\n\n  const token = await getToken();\n\n  return dispatch(setToken(token));\n};\n","import { getQuestions, getCategories } from '../../services/questionApi';\n\nconst QUESTION_ACTIONS = {\n  REQUEST_API: 'REQUEST_API',\n  FAILED_REQUEST: 'REQUEST_FAILED',\n  SET_QUESTIONS: 'SET_QUESTIONS',\n  GET_CATEGORIES: 'GET_CATEGORIES',\n};\n\nexport const UZBOY_QUESTION_ACTIONS = {\n  SHUFFLE_QUESTIONS: 'SHUFFLE_QUESTIONS',\n};\n\nconst requestApi = () => ({ type: QUESTION_ACTIONS.REQUEST_API });\n\nconst requestFailed = (error) => ({\n  type: QUESTION_ACTIONS.FAILED_REQUEST,\n  payload: error,\n});\n\nconst setQuestions = (questions) => ({\n  type: QUESTION_ACTIONS.SET_QUESTIONS,\n  payload: questions,\n});\n\nconst getCategoriesAction = (categoryList) => ({\n  type: QUESTION_ACTIONS.GET_CATEGORIES,\n  payload: categoryList,\n});\n\nexport const reShuffleUzbQuestions = (payload) => ({\n  type: UZBOY_QUESTION_ACTIONS.SHUFFLE_QUESTIONS,\n  payload,\n});\n\nexport const fetchQuestionsThunk = () => async (dispatch, getState) => {\n  dispatch(requestApi());\n\n  try {\n    const { auth } = getState();\n    const questions = await getQuestions(auth.token);\n    console.log(questions);\n\n    dispatch(setQuestions(questions));\n  } catch (error) {\n    dispatch(requestFailed(error.message));\n  }\n};\n\nexport const fetchCategoriesThunk = () => async (dispatch) => {\n  dispatch(requestApi());\n\n  try {\n    const categoryList = await getCategories();\n\n    dispatch(getCategoriesAction(categoryList));\n  } catch (error) {\n    dispatch(requestFailed(error.message));\n  }\n};\n\nexport default QUESTION_ACTIONS;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { MD5 } from 'crypto-js';\n// import { MdSettings } from 'react-icons/md';\n\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\n\nimport { fetchToken, setGravatar, setPlayerData } from '../../redux/actions';\nimport { fetchCategoriesThunk } from '../../redux/actions/questionActions';\n\nimport logo from '../../assets/betterLogo.png';\n\nimport './style.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n      validName: true,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.getGravatar = this.getGravatar.bind(this);\n  }\n\n  componentDidMount() {\n    const { getCategories } = this.props;\n\n    getCategories();\n  }\n\n  getGravatar(email) {\n    const gravatarHash = MD5(email)\n      .toString()\n      .toLowerCase()\n      .trim();\n    const gravatarEmail = `https://www.gravatar.com/avatar/${gravatarHash}`;\n    return gravatarEmail;\n  }\n\n  handleChange({ target }) {\n    const { value, name } = target;\n    const { validation } = target.dataset;\n\n    this.setState({\n      [name]: value,\n      [validation]: value.length > 0,\n    });\n  }\n\n  handleClick(event) {\n    const { fetch, token, history, setGravatarToState, setPlayerToState } = this.props;\n    const { name, email } = this.state;\n\n    event.preventDefault();\n    fetch();\n\n    const gravatarEmail = this.getGravatar(email);\n    setGravatarToState(gravatarEmail);\n    setPlayerToState(name, email);\n\n    window.localStorage.setItem('token', token);\n    history.push('/game');\n  }\n\n  render() {\n    const { name, email, validName } = this.state;\n    // const { history } = this.props;\n\n    return (\n      <div className=\"login-section\">\n        <img src={ logo } alt=\"Trivia\" style={ { width: '100%' } } />\n        <form className=\"login-form\">\n          <Input\n            placeholder=\"Name\"\n            type=\"text\"\n            validation=\"validName\"\n            name=\"name\"\n            value={ name }\n            onChange={ this.handleChange }\n          />\n\n          <Input\n            placeholder=\"Email\"\n            type=\"email\"\n            validation=\"validEmail\"\n            name=\"email\"\n            value={ email }\n            onChange={ this.handleChange }\n          />\n\n          <Button\n            type=\"submit\"\n            disabled={ !validName }\n            // disabled={ !validName || !validEmail }\n            onClick={ this.handleClick }\n            text=\"Jogar\"\n            color={ !validName ? '#8b8b8b' : undefined }\n            // color={ !validName || !validEmail ? '#8b8b8b' : undefined }\n          />\n\n          {/* <div className=\"settings-button\">\n            <MdSettings onClick={ () => history.push('/settings') } />\n          </div> */}\n        </form>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  fetch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  setGravatarToState: PropTypes.func.isRequired,\n  setPlayerToState: PropTypes.func.isRequired,\n  token: PropTypes.string.isRequired,\n  getCategories: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  token: state.auth.token,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetch: () => dispatch(fetchToken()),\n  setGravatarToState: (gravatar) => dispatch(setGravatar(gravatar)),\n  setPlayerToState: (name, email) => dispatch(setPlayerData(name, email)),\n  getCategories: () => dispatch(fetchCategoriesThunk()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n\nclass SelectInput extends Component {\n  render() {\n    const { labelText, id, options, value, onChange } = this.props;\n\n    return (\n      <div className=\"select-container\" style={ { gridArea: id } }>\n        <label htmlFor={ id }>{labelText}</label>\n        <select\n          className=\"select-input\"\n          name={ id }\n          id={ id }\n          value={ value }\n          onChange={ onChange }\n        >\n          {options.map(({ name, id: optionId }) => (\n            <option key={ optionId } value={ optionId }>\n              {name}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nSelectInput.propTypes = {\n  labelText: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SelectInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport SelectInput from '../../components/SelectInput';\nimport Button from '../../components/Button';\n\nimport { fetchCategoriesThunk } from '../../redux/actions/questionActions';\n\nimport {\n  difficulties,\n  types,\n  getUserConfigs,\n} from '../../services/questionApi';\n\nimport './style.css';\n\nclass Settings extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      category: 9,\n      difficulty: 'easy',\n      type: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.getUserConfigs = this.getUserConfigs.bind(this);\n  }\n\n  componentDidMount() {\n    const { getCategories } = this.props;\n\n    getCategories();\n    this.getUserConfigs();\n  }\n\n  getUserConfigs() {\n    this.setState({\n      ...getUserConfigs(),\n    });\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n\n    const { category, difficulty, type } = this.state;\n    const { history } = this.props;\n\n    localStorage.setItem(\n      'userConfigs',\n      JSON.stringify({\n        category,\n        difficulty,\n        type,\n      }),\n    );\n\n    history.push('/');\n  }\n\n  render() {\n    const { category, difficulty, type } = this.state;\n    const { categoryList, history } = this.props;\n\n    return (\n      <div>\n        <form className=\"settings-form\">\n          <div className=\"select-section\">\n            <SelectInput\n              labelText=\"Category\"\n              id=\"category\"\n              options={ categoryList }\n              value={ category }\n              onChange={ this.handleChange }\n            />\n\n            <SelectInput\n              labelText=\"Difficulty\"\n              id=\"difficulty\"\n              options={ difficulties }\n              value={ difficulty }\n              onChange={ this.handleChange }\n            />\n\n            <SelectInput\n              labelText=\"Type\"\n              id=\"type\"\n              options={ types }\n              value={ type }\n              onChange={ this.handleChange }\n            />\n          </div>\n          <div className=\"buttons-section\">\n            <Button type=\"submit\" text=\"Save\" onClick={ this.handleClick } />\n\n            <Button\n              type=\"button\"\n              text=\"Cancel\"\n              onClick={ () => history.push('/') }\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ questions }) => ({\n  categoryList: questions.categoryList,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCategories: () => dispatch(fetchCategoriesThunk()),\n});\n\nSettings.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  categoryList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getCategories: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","const GAME_ACTIONS = {\n  GUESS: 'GUESS',\n  NEXT_QUESTION: 'NEXT_QUESTION',\n  INCREASE_SCORE: 'INCREASE_SCORE',\n  SET_TIME: 'SET_TIME',\n  RESET_GAME: 'RESET_GAME',\n  INCREASE_ASSERTIONS: 'INCREASE_ASSERTIONS',\n};\n\nexport const guess = () => ({ type: GAME_ACTIONS.GUESS });\n\nexport const increaseScore = (amount) => ({\n  type: GAME_ACTIONS.INCREASE_SCORE,\n  payload: amount,\n});\n\nexport const setTime = (time) => ({\n  type: GAME_ACTIONS.SET_TIME,\n  payload: time,\n});\n\nexport const nextQuestion = () => ({ type: GAME_ACTIONS.NEXT_QUESTION });\n\nexport const resetGame = () => ({\n  type: GAME_ACTIONS.RESET_GAME,\n});\n\nexport const increaseAssertions = () => ({\n  type: GAME_ACTIONS.INCREASE_ASSERTIONS,\n});\n\nexport default GAME_ACTIONS;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Button from '../Button';\n\nimport { guess as guessAction } from '../../redux/actions/gameActions';\n\nimport './style.css';\n\nclass Answer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const { guess, checkAnswer, questionInfo, answer } = this.props;\n    const { difficulty } = questionInfo;\n\n    guess();\n    checkAnswer(answer, difficulty);\n  }\n\n  render() {\n    const {\n      answer,\n      guessed,\n      timeOver,\n    } = this.props;\n\n    let className = 'answer-button';\n\n    if (guessed || timeOver) {\n      className = answer.isCorrect ? 'answer-button correct' : 'answer-button incorrect';\n    }\n\n    return (\n      <Button\n        type=\"button\"\n        className={ `default ${className}` }\n        onClick={ this.handleClick }\n        disabled={ timeOver || guessed }\n        text={ answer.text }\n      />\n    );\n  }\n}\n\nAnswer.propTypes = {\n  answer: PropTypes.shape({\n    isCorrect: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired,\n  }).isRequired,\n  checkAnswer: PropTypes.func.isRequired,\n  guess: PropTypes.func.isRequired,\n  guessed: PropTypes.bool.isRequired,\n  questionInfo: PropTypes.shape({\n    difficulty: PropTypes.string.isRequired,\n  }).isRequired,\n  timeOver: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = ({ game }) => ({\n  guessed: game.guessed,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  guess: () => dispatch(guessAction()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Answer);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setTime } from '../../redux/actions/gameActions';\n\nimport './style.css';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startTimer = this.startTimer.bind(this);\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  startTimer() {\n    const second = 10;\n    this.interval = setInterval(() => {\n      this.countDown();\n    }, second);\n  }\n\n  countDown() {\n    const { setTimeOver, setTimeRedux, time } = this.props;\n    setTimeRedux(time - 1);\n    if (time <= 0) {\n      clearInterval(this.interval);\n      setTimeOver();\n    }\n  }\n\n  render() {\n    const { time, guessed } = this.props;\n    const MAX_TIME = 3000;\n\n    if (guessed) clearInterval(this.interval);\n\n    return (\n      <div className=\"time-bar\">\n        <div\n          className=\"time-progress\"\n          style={ { width: `${(time * 100) / MAX_TIME}%` } }\n        />\n      </div>\n    );\n  }\n}\n\nTimer.propTypes = {\n  setTimeOver: PropTypes.func.isRequired,\n  setTimeRedux: PropTypes.func.isRequired,\n  time: PropTypes.number.isRequired,\n  guessed: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = ({ game }) => ({\n  time: game.time,\n  guessed: game.guessed,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setTimeRedux: (time) => dispatch(setTime(time)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Answer from '../Answer';\nimport Timer from '../Timer';\n\nimport {\n  increaseScore,\n  nextQuestion as nextQuestionAction,\n  setTime,\n  increaseAssertions as increaseAssertionsAction,\n} from '../../redux/actions/gameActions';\n\nimport rau from '../../assets/rau.png';\n\nimport './style.css';\n\nconst difficulties = {\n  easy: 1,\n  medium: 2,\n  hard: 3,\n};\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timeOver: false,\n    };\n\n    this.setTimeOver = this.setTimeOver.bind(this);\n    this.checkAnswer = this.checkAnswer.bind(this);\n    this.handleNextQuestion = this.handleNextQuestion.bind(this);\n  }\n\n  setTimeOver() {\n    this.setState({\n      timeOver: true,\n    });\n  }\n\n  handleNextQuestion() {\n    const DEFAULT_TIME = 3000;\n\n    const {\n      history,\n      nextQuestion,\n      currentQuestion,\n      totalQuestions,\n      setTimeRedux,\n    } = this.props;\n\n    if (currentQuestion < totalQuestions - 1) {\n      nextQuestion();\n      setTimeRedux(DEFAULT_TIME);\n\n      this.setState({\n        timeOver: false,\n      });\n    } else {\n      history.push('/feedback');\n    }\n  }\n\n  checkAnswer({ text }, difficulty) {\n    const { questionInfo, time, increaseGlobalScore, increaseAssertions } = this.props;\n\n    const { correctAnswer } = questionInfo;\n    const BASE_SCORE = 10;\n\n    if (text === correctAnswer) {\n      const score = BASE_SCORE + (time / 100).toFixed(0) * difficulties[difficulty];\n      increaseGlobalScore(score);\n      increaseAssertions();\n    }\n  }\n\n  render() {\n    const { guessed, currentQuestion, questionInfo } = this.props;\n    const { shuffledAnswers } = questionInfo;\n    const { timeOver } = this.state;\n    return (\n      <div className=\"question\">\n        <div className=\"question-header\">\n          <div className=\"question-info\">\n            <p className=\"difficulty\">\n              {`Dificuldade: ${difficulties[questionInfo.difficulty]}`}\n            </p>\n          </div>\n          <p>{`${currentQuestion + 1}/5`}</p>\n        </div>\n        <Timer key={ currentQuestion } setTimeOver={ this.setTimeOver } />\n        <p data-testid=\"question-text\" className=\"question-text\">\n          {questionInfo.question}\n        </p>\n        <div className=\"answers\">\n          {shuffledAnswers.map((answer, index) => (\n            <Answer\n              key={ `${answer.text} + ${index}` }\n              timeOver={ timeOver }\n              answer={ answer }\n              index={ index }\n              checkAnswer={ this.checkAnswer }\n              questionInfo={ questionInfo }\n            />\n          ))}\n        </div>\n        {(guessed || timeOver) && (\n          <input\n            type=\"image\"\n            alt=\"profile top button\"\n            onClick={ this.handleNextQuestion }\n            className=\"next-button\"\n            src={ rau }\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nQuestion.propTypes = {\n  guessed: PropTypes.bool.isRequired,\n  currentQuestion: PropTypes.number.isRequired,\n  totalQuestions: PropTypes.number.isRequired,\n  time: PropTypes.number.isRequired,\n  increaseGlobalScore: PropTypes.func.isRequired,\n  nextQuestion: PropTypes.func.isRequired,\n  setTimeRedux: PropTypes.func.isRequired,\n  increaseAssertions: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  questionInfo: PropTypes.shape({\n    question: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    correctAnswer: PropTypes.string.isRequired,\n    difficulty: PropTypes.string.isRequired,\n    shuffledAnswers: PropTypes.arrayOf(PropTypes.object).isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = ({ game }) => ({\n  time: game.time,\n  guessed: game.guessed,\n  currentQuestion: game.currentQuestion,\n  totalQuestions: game.totalQuestions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  increaseGlobalScore: (amount) => dispatch(increaseScore(amount)),\n  increaseAssertions: () => dispatch(increaseAssertionsAction()),\n  nextQuestion: () => dispatch(nextQuestionAction()),\n  setTimeRedux: (time) => dispatch(setTime(time)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);\n","import React, { Component } from 'react';\n\nimport './style.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading\">\n          <div className=\"loading-header\" />\n          <div className=\"loading-time-bar\" />\n          <div className=\"loading-question\" />\n          <div className=\"loading-buttons-section\">\n            <div className=\"loading-button\" />\n            <div className=\"loading-button\" />\n            <div className=\"loading-button\" />\n            <div className=\"loading-button\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Question from '../../components/Question';\n// import Header from '../../components/Header';\nimport Loading from '../../components/Loading';\n\nimport { fetchQuestionsThunk } from '../../redux/actions/questionActions';\nimport { resetGame as resetGameAction } from '../../redux/actions/gameActions';\n\nclass Game extends Component {\n  componentDidMount() {\n    const { fetchQuestions, email, history, resetGame } = this.props;\n\n    if (!email) {\n      resetGame();\n      history.push('/');\n    } else {\n      fetchQuestions();\n    }\n  }\n\n  render() {\n    const { questions, isFetching, currentQuestion } = this.props;\n\n    if (isFetching) {\n      return (\n        <div>\n          {/* <Header /> */}\n          <Loading />\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* <Header /> */}\n        {questions.length && (\n          <Question questionInfo={ questions[currentQuestion] } { ...this.props } />\n        )}\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  currentQuestion: PropTypes.number.isRequired,\n  fetchQuestions: PropTypes.func.isRequired,\n  resetGame: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  email: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = ({ game, questions, auth }) => ({\n  questions: questions.questionsArray,\n  currentQuestion: game.currentQuestion,\n  isFetching: questions.isFetching,\n  email: auth.email,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchQuestions: () => dispatch(fetchQuestionsThunk()),\n  resetGame: () => dispatch(resetGameAction()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// import Header from '../../components/Header';\nimport Button from '../../components/Button';\n\nimport { resetGame as resetGameAction } from '../../redux/actions/gameActions';\n\nimport pablao from '../../assets/pablao.jpeg';\nimport gusta from '../../assets/gusta.jpeg';\n\nimport './style.css';\n\nclass Feedback extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handlePlayAgain = this.handlePlayAgain.bind(this);\n    this.setPlayer = this.setPlayer.bind(this);\n  }\n\n  componentDidMount() {\n    this.setPlayer();\n  }\n\n  setPlayer() {\n    const { name, score, gravatar } = this.props;\n    const ranking = window.localStorage.getItem('ranking');\n    const emptyArray = '[]';\n    const playersJSON = ranking || emptyArray;\n    const players = JSON.parse(playersJSON);\n    const newPlayer = { name, score, picture: gravatar };\n    players.push(newPlayer);\n    window.localStorage.setItem('ranking', JSON.stringify(players));\n  }\n\n  handlePlayAgain() {\n    const { history, resetGame } = this.props;\n    resetGame();\n    history.push('/');\n  }\n\n  handleClick() {\n    const { history } = this.props;\n    history.push('/ranking');\n  }\n\n  render() {\n    const MIN_ASSERTIONS = 3;\n    const { score, assertions } = this.props;\n\n    return (\n      <div className=\"feedback-section\">\n        {assertions >= MIN_ASSERTIONS ? (\n          <div className=\"message-section\">\n            <div className=\"image-container\">\n              <img src={ pablao } alt=\"pablao deu bom\" className=\"pic pabo\" />\n            </div>\n            <p className=\"feedback-message\">Beleza hein!</p>\n          </div>\n        ) : (\n          <div className=\"message-section\">\n            <div className=\"image-container\">\n              <img src={ gusta } alt=\"gusta deu ruim\" className=\"pic gusta\" />\n            </div>\n            <p className=\"feedback-message\">Deu ruim</p>\n          </div>\n        )}\n        <div className=\"results\">\n          <p>\n            {'Pontos: '}\n            <span data-testid=\"feedback-total-score\">{score}</span>\n          </p>\n          <p>\n            {'Respostas Certas: '}\n            <span data-testid=\"feedback-total-question\">{assertions}</span>\n          </p>\n        </div>\n        <div className=\"buttons-section\">\n          <Button type=\"button\" onClick={ this.handleClick } text=\"Ranking\" />\n\n          <Button\n            type=\"button\"\n            onClick={ this.handlePlayAgain }\n            text=\"Jogar novamente\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  gravatar: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  name: PropTypes.string.isRequired,\n  resetGame: PropTypes.func.isRequired,\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = ({ game, auth }) => ({\n  score: game.score,\n  name: auth.name,\n  gravatar: auth.gravatar,\n  assertions: game.assertions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetGame: () => dispatch(resetGameAction()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { BsTrophy } from 'react-icons/bs';\n\nimport './style.css';\n\nconst trophyColors = ['gold', 'silver', 'darkorange'];\n\nclass RankingItem extends Component {\n  render() {\n    const { player, index } = this.props;\n    const { name, score } = player;\n    const podium = index <= 2;\n\n    const style = {\n      color: trophyColors[index],\n      visibility: podium ? 'visible' : 'hidden',\n    };\n\n    return (\n      <div className=\"ranking-item\">\n        <div className=\"trophy-icon\" style={ style }>\n          <BsTrophy />\n        </div>\n\n        <h3>{`${index + 1}.`}</h3>\n        <h3 className=\"name\">{name}</h3>\n        <h3 className=\"score\">{score}</h3>\n      </div>\n    );\n  }\n}\n\nRankingItem.propTypes = {\n  player: PropTypes.shape({\n    picture: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default RankingItem;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport RankingItem from '../../components/RankingItem';\nimport Button from '../../components/Button';\n\nimport { resetGame as resetGameAction } from '../../redux/actions/gameActions';\n\nimport './style.css';\n\nclass Ranking extends Component {\n  constructor() {\n    super();\n    this.state = {\n      players: [],\n    };\n\n    this.setPlayers = this.setPlayers.bind(this);\n    this.handleHomeClick = this.handleHomeClick.bind(this);\n    this.sortPlayers = this.sortPlayers.bind(this);\n  }\n\n  componentDidMount() {\n    this.setPlayers();\n  }\n\n  setPlayers() {\n    const localPlayersString = window.localStorage.getItem('ranking');\n    const localPlayers = JSON.parse(localPlayersString);\n    const sortedPlayers = this.sortPlayers(localPlayers);\n    this.setState({ players: sortedPlayers });\n  }\n\n  sortPlayers(players) {\n    return players.sort((a, b) => b.score - a.score);\n  }\n\n  handleHomeClick() {\n    const { history, resetGame } = this.props;\n    resetGame();\n    history.push('/');\n  }\n\n  render() {\n    const { players } = this.state;\n    return (\n      <div className=\"ranking-section\">\n        <h2 data-testid=\"ranking-title\">RANKING</h2>\n\n        <div className=\"ranking\">\n          {players.map((player, index) => (\n            <RankingItem key={ index } player={ player } index={ index } />\n          ))}\n        </div>\n\n        <Button\n          className=\"ranking-button\"\n          type=\"button\"\n          onClick={ this.handleHomeClick }\n          text=\"Início\"\n        />\n      </div>\n    );\n  }\n}\n\nRanking.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  resetGame: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetGame: () => dispatch(resetGameAction()),\n});\n\nexport default connect(null, mapDispatchToProps)(Ranking);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_TOKEN,\n  REQUEST_TOKEN,\n  SET_GRAVATAR,\n  SET_PLAYER } from '../actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  token: '',\n  isFetchingToken: false,\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_TOKEN:\n    return { ...state, isFetchingToken: true };\n  case SET_TOKEN:\n    return { ...state, token: action.payload, isFetchingToken: false };\n  case SET_GRAVATAR:\n    return { ...state, gravatar: action.payload };\n  case SET_PLAYER:\n    return { ...state, name: action.payload.name, email: action.payload.email };\n  default:\n    return state;\n  }\n};\n\nexport default authReducer;\n","import QUESTION_ACTIONS, { UZBOY_QUESTION_ACTIONS } from '../actions/questionActions';\nimport GAME_ACTIONS from '../actions/gameActions';\n// import { getUzboyQuestions, shuffle } from '../../utils/uzboyQuestions';\n\nconst INITIAL_STATE = {\n  questionsArray: [],\n  categoryList: [],\n  isFetching: false,\n  error: '',\n};\n\nconst questionsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case QUESTION_ACTIONS.REQUEST_API:\n    return { ...state, isFetching: true };\n  case QUESTION_ACTIONS.FAILED_REQUEST:\n    return { ...state, isFetching: false, error: action.payload };\n  case QUESTION_ACTIONS.SET_QUESTIONS:\n    return {\n      ...state,\n      isFetching: false,\n      error: '',\n      questionsArray: action.payload,\n    };\n  case GAME_ACTIONS.RESET_GAME:\n    return { ...INITIAL_STATE };\n  case QUESTION_ACTIONS.GET_CATEGORIES:\n    return {\n      ...state,\n      isFetching: false,\n      error: '',\n      categoryList: action.payload,\n    };\n  // tá inútil essa action pq eu acabei não precisando usar\n  case UZBOY_QUESTION_ACTIONS.SHUFFLE_QUESTIONS:\n    return INITIAL_STATE;\n\n  default:\n    return state;\n  }\n};\n\nexport default questionsReducer;\n","import GAME_ACTIONS from '../actions/gameActions';\n\nconst INITIAL_STATE = {\n  guessed: false,\n  score: 0,\n  assertions: 0,\n  totalQuestions: 5,\n  time: 3000,\n  currentQuestion: 0,\n};\n\nconst gameReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case GAME_ACTIONS.GUESS:\n    return { ...state, guessed: true };\n  case GAME_ACTIONS.NEXT_QUESTION:\n    return {\n      ...state,\n      guessed: false,\n      currentQuestion: state.currentQuestion + 1,\n    };\n  case GAME_ACTIONS.INCREASE_SCORE:\n    return { ...state, score: state.score + action.payload };\n  case GAME_ACTIONS.INCREASE_ASSERTIONS:\n    return { ...state, assertions: state.assertions + 1 };\n  case GAME_ACTIONS.SET_TIME:\n    return { ...state, time: action.payload };\n  case GAME_ACTIONS.RESET_GAME:\n    return INITIAL_STATE;\n  default:\n    return state;\n  }\n};\n\nexport default gameReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport questionsReducer from './questionsReducer';\nimport gameReducer from './gameReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  game: gameReducer,\n  questions: questionsReducer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Login from './pages/Login';\nimport Settings from './pages/Settings';\nimport Game from './pages/Game';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\n\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route path=\"/settings\" component={ Settings } />\n        <Route path=\"/game\" component={ Game } />\n        <Route path=\"/feedback\" component={ Feedback } />\n        <Route path=\"/ranking\" component={ Ranking } />\n        <Route component={ Login } />\n      </Switch>\n    </div>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/betterLogo.89d799ef.png\";","module.exports = __webpack_public_path__ + \"static/media/rau.db059c17.png\";","module.exports = __webpack_public_path__ + \"static/media/pablao.b73ecb14.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/gusta.6cbe145e.jpeg\";"],"sourceRoot":""}